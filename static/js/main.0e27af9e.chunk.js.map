{"version":3,"sources":["constants/Archetypes.js","constants/Adjectives.js","constants/CanIGetA.js","constants/Emotions.js","constants/Locations.js","constants/Names.js","constants/Relationships.js","constants/Words.js","constants/CustomChoices.js","App.js","serviceWorker.js","index.js"],"names":["Archetypes","jungArchetypes","wikiStockCharacters","Adjectives","adjectives","CanIGetA","locations","relationships","words","emotions","Love","Peaceful","Tender","Longing","Romantic","Desirous","Joy","Enthralled","Elated","Enthusiastic","Optimistic","Proud","Cheerful","Happy","Content","Surprise","Moved","Overcome","Amazed","Confused","Stunned","Sadness","Hopeless","Neglected","Shameful","Disappointed","Melancholic","Distressed","Anger","Disgusted","Envious","Irritable","Exasperated","Enraged","Fear","Horrified","Nervous","Insecure","Terrified","Scared","Emotions","level1","Object","keys","level2","values","flatMap","x","level3","combined","entries","_ref","_ref2","slicedToArray","e1","_ref3","_ref4","e2","map","e3","Locations","concat","Names","firstNames","lastNames","Relationships","abstractNouns","toConsumableArray","Set","CustomChoices","props","secretWants","animals","randomItem","items","Math","floor","random","length","generators","Word","Emotion","Adjective","Location","Relationship","First Name","Last Name","Prop / Possession","Secret Want","Stock Character","Jung Archetype","GeneratorDisplay","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","choices","setState","_this2","react_default","a","createElement","className","onClick","refresh","name","React","Component","App","App_GeneratorDisplay","key","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oQAoHeA,SAAA,CACbC,eApHqB,CAErB,kCACA,kCACA,4CACA,4CAEA,8BACA,qCACA,6BACA,iDAEA,6BACA,oCACA,iCACA,sDAsGAC,oBAjG0B,CAC1B,0BAEA,WACA,mBACA,UACA,aACA,eACA,gBACA,mBACA,WACA,YACA,WACA,QACA,qBACA,QACA,YACA,YACA,8BACA,WACA,WACA,oBACA,eACA,aACA,kBACA,iBACA,cACA,MAEA,QACA,8BACA,oBACA,UACA,eACA,UACA,iBACA,gBACA,mBACA,eACA,SACA,gBAEA,WACA,kBACA,yBAGA,mBACA,eACA,OACA,WACA,eACA,SAGA,SAEA,YAEA,8BACA,WACA,gBAEA,gBACA,QAEA,wBAEA,qBACA,iBAEA,gBACA,eACA,YACA,eACA,eACA,eACA,SACA,kBACA,aACA,cAEA,gBACA,OACA,gBACA,UACA,gBAEA,SACA,YACA,eACA,WCitCaC,EAAA,CACbC,WA/zCiB,CACjB,YACA,OACA,WACA,WACA,aACA,YACA,eACA,WACA,SACA,SACA,YACA,SACA,SACA,QACA,YACA,UACA,aACA,WACA,SACA,WACA,cACA,eACA,SACA,OACA,cACA,aACA,QACA,WACA,YACA,YACA,OACA,UACA,WACA,QACA,YACA,QACA,MACA,aACA,UACA,YACA,QACA,SACA,UACA,WACA,UACA,UACA,QACA,YACA,WACA,SACA,UACA,UACA,UACA,MACA,eACA,cACA,MACA,SACA,OACA,WACA,WACA,UACA,UACA,cACA,WACA,WACA,YACA,aACA,UACA,YACA,aACA,YACA,aACA,UACA,QACA,UACA,QACA,UACA,UACA,OACA,MACA,QACA,OACA,SACA,QACA,YACA,UACA,UACA,aACA,OACA,SACA,YACA,MACA,cACA,gBACA,aACA,SACA,QACA,kBACA,QACA,QACA,UACA,QACA,QACA,WACA,QACA,OACA,WACA,QACA,UACA,OACA,OACA,SACA,QACA,OACA,SACA,YACA,QACA,QACA,YACA,QACA,SACA,YACA,QACA,SACA,SACA,QACA,UACA,SACA,QACA,QACA,UACA,aACA,QACA,WACA,OACA,UACA,UACA,cACA,OACA,SACA,SACA,UACA,WACA,UACA,WACA,SACA,WACA,YACA,aACA,WACA,QACA,WACA,SACA,QACA,SACA,SACA,WACA,UACA,QACA,QACA,YACA,SACA,QACA,SACA,SACA,WACA,SACA,YACA,SACA,OACA,WACA,YACA,WACA,cACA,SACA,gBACA,YACA,WACA,UACA,cACA,WACA,YACA,WACA,WACA,YACA,cACA,WACA,UACA,eACA,SACA,OACA,cACA,cACA,QACA,UACA,SACA,aACA,YACA,SACA,QACA,SACA,WACA,SACA,WACA,QACA,WACA,UACA,UACA,QACA,WACA,SACA,aACA,WACA,aACA,QACA,QACA,OACA,cACA,UACA,OACA,YACA,SACA,SACA,OACA,UACA,WACA,OACA,SACA,YACA,OACA,UACA,SACA,UACA,WACA,OACA,cACA,YACA,UACA,YACA,WACA,aACA,UACA,aACA,YACA,aACA,YACA,YACA,QACA,SACA,aACA,YACA,cACA,WACA,WACA,aACA,UACA,YACA,YACA,UACA,WACA,MACA,UACA,YACA,SACA,QACA,aACA,WACA,aACA,YACA,aACA,YACA,WACA,SACA,UACA,WACA,YACA,QACA,QACA,SACA,SACA,YACA,OACA,SACA,WACA,SACA,SACA,MACA,OACA,OACA,UACA,OACA,QACA,QACA,UACA,OACA,aACA,WACA,SACA,WACA,YACA,UACA,SACA,UACA,WACA,UACA,aACA,aACA,cACA,cACA,UACA,YACA,QACA,YACA,aACA,YACA,cACA,WACA,UACA,SACA,UACA,QACA,aACA,YACA,WACA,UACA,WACA,OACA,YACA,cACA,QACA,OACA,UACA,YACA,YACA,UACA,WACA,YACA,YACA,SACA,YACA,cACA,SACA,cACA,cACA,aACA,cACA,WACA,UACA,QACA,OACA,WACA,OACA,QACA,WACA,SACA,QACA,YACA,MACA,YACA,UACA,UACA,OACA,MACA,QACA,WACA,YACA,WACA,UACA,WACA,SACA,SACA,SACA,WACA,MACA,SACA,SACA,OACA,WACA,OACA,QACA,YACA,UACA,QACA,QACA,aACA,SACA,OACA,SACA,WACA,aACA,SACA,WACA,UACA,SACA,QACA,YACA,UACA,OACA,YACA,UACA,WACA,SACA,SACA,WACA,aACA,YACA,WACA,QACA,QACA,SACA,OACA,SACA,WACA,QACA,WACA,aACA,cACA,SACA,SACA,YACA,SACA,QACA,SACA,SACA,SACA,WACA,OACA,WACA,aACA,QACA,QACA,QACA,aACA,UACA,UACA,WACA,SACA,UACA,QACA,QACA,SACA,WACA,SACA,YACA,UACA,QACA,WACA,UACA,aACA,aACA,SACA,WACA,SACA,OACA,SACA,OACA,eACA,WACA,WACA,WACA,QACA,YACA,WACA,WACA,QACA,OACA,QACA,SACA,QACA,aACA,OACA,QACA,WACA,WACA,QACA,YACA,UACA,WACA,UACA,WACA,QACA,SACA,WACA,SACA,SACA,WACA,QACA,QACA,OACA,WACA,WACA,QACA,QACA,iBACA,OACA,eACA,UACA,WACA,aACA,QACA,QACA,UACA,WACA,UACA,YACA,SACA,WACA,QACA,QACA,UACA,WACA,SACA,UACA,OACA,aACA,YACA,SACA,SACA,SACA,SACA,YACA,UACA,UACA,WACA,aACA,MACA,OACA,SACA,cACA,UACA,YACA,SACA,UACA,QACA,OACA,MACA,QACA,aACA,YACA,UACA,OACA,WACA,WACA,MACA,YACA,eACA,UACA,aACA,cACA,YACA,cACA,aACA,aACA,YACA,UACA,YACA,cACA,aACA,YACA,gBACA,SACA,WACA,YACA,aACA,cACA,iBACA,aACA,aACA,SACA,SACA,eACA,eACA,aACA,kBACA,aACA,YACA,WACA,gBACA,WACA,YACA,aACA,WACA,WACA,WACA,WACA,WACA,YACA,gBACA,YACA,cACA,gBACA,cACA,SACA,cACA,cACA,WACA,gBACA,WACA,WACA,gBACA,aACA,QACA,QACA,SACA,aACA,SACA,UACA,UACA,QACA,QACA,SACA,SACA,SACA,WACA,YACA,QACA,QACA,QACA,SACA,WACA,gBACA,OACA,MACA,OACA,cACA,SACA,SACA,SACA,SACA,UACA,gBACA,QACA,QACA,SACA,OACA,QACA,QACA,OACA,UACA,OACA,SACA,SACA,OACA,UACA,QACA,OACA,OACA,QACA,aACA,QACA,eACA,UACA,SACA,UACA,OACA,UACA,SACA,QACA,SACA,SACA,OACA,SACA,QACA,YACA,OACA,SACA,OACA,YACA,QACA,WACA,OACA,OACA,UACA,SACA,SACA,MACA,QACA,QACA,YACA,WACA,QACA,WACA,YACA,MACA,UACA,cACA,WACA,QACA,OACA,UACA,UACA,YACA,YACA,UACA,SACA,SACA,QACA,OACA,SACA,QACA,UACA,WACA,SACA,OACA,SACA,UACA,YACA,WACA,QACA,QACA,WACA,OACA,QACA,WACA,YACA,QACA,QACA,YACA,UACA,YACA,QACA,QACA,SACA,SACA,QACA,YACA,UACA,aACA,QACA,YACA,WACA,aACA,cACA,QACA,UACA,eACA,UACA,QACA,QACA,QACA,QACA,aACA,QACA,SACA,QACA,UACA,UACA,WACA,OACA,OACA,YACA,QACA,WACA,YACA,aACA,cACA,UACA,MACA,OACA,OACA,QACA,SACA,QACA,YACA,QACA,UACA,SACA,UACA,QACA,aACA,QACA,UACA,OACA,aACA,QACA,WACA,QACA,SACA,UACA,aACA,MACA,UACA,UACA,YACA,WACA,OACA,MACA,gBACA,OACA,OACA,UACA,aACA,UACA,SACA,UACA,WACA,UACA,WACA,SACA,SACA,QACA,MACA,WACA,aACA,WACA,aACA,cACA,OACA,aACA,UACA,YACA,aACA,YACA,OACA,SACA,WACA,UACA,UACA,aACA,OACA,SACA,WACA,UACA,UACA,WACA,WACA,QACA,WACA,YACA,QACA,cACA,QACA,QACA,WACA,WACA,OACA,UACA,QACA,YACA,UACA,UACA,WACA,UACA,WACA,QACA,QACA,UACA,YACA,SACA,WACA,SACA,YACA,OACA,UACA,SACA,OACA,WACA,WACA,UACA,WACA,YACA,YACA,WACA,UACA,cACA,SACA,WACA,SACA,UACA,UACA,QACA,WACA,UACA,QACA,WACA,aACA,aACA,UACA,SACA,QACA,UACA,WACA,UACA,OACA,OACA,SACA,QACA,SACA,UACA,WACA,SACA,YACA,cACA,YACA,SACA,YACA,eACA,QACA,eACA,QACA,iBACA,SACA,WACA,YACA,UACA,SACA,QACA,OACA,OACA,MACA,QACA,OACA,YACA,aACA,SACA,WACA,cACA,MACA,aACA,QACA,UACA,WACA,WACA,aACA,aACA,SACA,YACA,YACA,WACA,aACA,cACA,YACA,YACA,OACA,QACA,QACA,SACA,OACA,UACA,SACA,OACA,WACA,SACA,QACA,QACA,QACA,QACA,UACA,QACA,OACA,UACA,QACA,QACA,QACA,MACA,OACA,QACA,OACA,QACA,OACA,YACA,WACA,YACA,QACA,SACA,SACA,QACA,UACA,YACA,aACA,WACA,WACA,UACA,SACA,cACA,YACA,SACA,eACA,eACA,UACA,cACA,WACA,SACA,UACA,aACA,UACA,SACA,SACA,UACA,QACA,UACA,WACA,YACA,QACA,aACA,QACA,UACA,WACA,SACA,QACA,aACA,QACA,SACA,MACA,OACA,SACA,QACA,QACA,SACA,UACA,SACA,aACA,SACA,SACA,WACA,WACA,SACA,SACA,SACA,OACA,QACA,WACA,OACA,SACA,QACA,QACA,SACA,SACA,OACA,SACA,WACA,SACA,YACA,SACA,WACA,OACA,QACA,QACA,SACA,OACA,gBACA,OACA,YACA,UACA,QACA,OACA,UACA,YACA,SACA,WACA,cACA,SACA,YACA,QACA,SACA,WACA,WACA,WACA,WACA,UACA,OACA,SACA,UACA,WACA,SACA,QACA,UACA,QACA,WACA,UACA,QACA,SACA,QACA,QACA,SACA,QACA,cACA,SACA,SACA,WACA,UACA,SACA,WACA,WACA,UACA,SACA,WACA,WACA,aACA,SACA,SACA,UACA,UACA,aACA,cACA,SACA,WACA,SACA,SACA,QACA,QACA,SACA,cACA,WACA,aACA,cACA,YACA,aACA,SACA,SACA,QACA,aACA,QACA,cACA,YACA,OACA,OACA,MACA,WACA,OACA,QACA,WACA,OACA,UACA,UACA,WACA,SACA,QACA,QACA,WACA,WACA,QACA,WACA,OACA,QACA,QACA,OACA,QACA,UACA,OACA,SACA,WACA,QACA,aACA,aACA,UACA,aACA,OACA,QACA,SACA,SACA,OACA,QACA,OACA,QACA,QACA,SACA,UACA,YACA,YACA,aACA,aACA,SACA,WACA,OACA,UACA,WACA,OACA,WACA,cACA,SACA,WACA,QACA,YACA,OACA,OACA,WACA,eACA,UACA,gBACA,WACA,cACA,cACA,YACA,SACA,aACA,QACA,WACA,cACA,UACA,YACA,UACA,cACA,SACA,SACA,UACA,UACA,WACA,UACA,UACA,YACA,aACA,cACA,SACA,SACA,YACA,YACA,WACA,SACA,SACA,WACA,UACA,SACA,SACA,UACA,YACA,WACA,YACA,YACA,YACA,SACA,UACA,QACA,QACA,SACA,OACA,SACA,UACA,WACA,QACA,SACA,QACA,OACA,QACA,WACA,QACA,WACA,OACA,UACA,YACA,WACA,aACA,UACA,UACA,aACA,WACA,WACA,aACA,UACA,SACA,UACA,WACA,UACA,QACA,YACA,QACA,aACA,MACA,UACA,OACA,cACA,SACA,OACA,WACA,WACA,cACA,SACA,OACA,OACA,UACA,QACA,SACA,MACA,SACA,QACA,UACA,QACA,UACA,kBACA,eACA,gBACA,WACA,YACA,WACA,aACA,YACA,MACA,QACA,YACA,YACA,YACA,QACA,QACA,WACA,SACA,OACA,YACA,SACA,OACA,UACA,SACA,UACA,QACA,SACA,OACA,OACA,QACA,SACA,SACA,YACA,SACA,QACA,QACA,UACA,OACA,UACA,YACA,QACA,QACA,YACA,aACA,SACA,WACA,WACA,WACA,QACA,MACA,UACA,SACA,SACA,YACA,QACA,WACA,QACA,OACA,UACA,QACA,WCvgBaC,EAAA,CACbC,UAtzBgB,CAChB,iBACA,WACA,UACA,UACA,iBACA,WACA,iBACA,oBACA,mBACA,cACA,iBACA,kBACA,cACA,YACA,cACA,cACA,SACA,yBACA,UACA,WACA,aACA,gBACA,YACA,QACA,UACA,cACA,uBACA,UACA,OACA,YACA,cACA,iBACA,cACA,gBACA,UACA,YACA,UACA,WACA,QACA,iBACA,YACA,gBACA,UACA,aACA,YACA,aACA,iBACA,QACA,aACA,WACA,YACA,eACA,cACA,aACA,aACA,cACA,iBACA,iBACA,YACA,mBACA,aACA,eACA,SACA,iBACA,eACA,WACA,OACA,WACA,YACA,gBACA,kBACA,iBACA,gBACA,WACA,MACA,cACA,YACA,mBACA,cACA,oBACA,UACA,OACA,+BACA,UACA,UACA,YACA,aACA,aACA,aACA,aACA,aACA,WACA,eACA,cACA,WACA,eACA,kBACA,YACA,aACA,kBACA,gBACA,gBACA,aACA,UACA,aACA,UACA,SACA,aACA,mBACA,uBACA,aACA,YACA,sBACA,gBACA,gBACA,eACA,aACA,cACA,kBACA,iBACA,SACA,kBACA,cACA,UACA,eACA,WACA,YACA,mBACA,cACA,cACA,YACA,eACA,mBACA,eACA,eACA,YACA,YACA,eACA,iBACA,WACA,iBACA,UACA,oBACA,WACA,aACA,YACA,eACA,iBACA,UACA,qBACA,YACA,eACA,sBACA,UACA,sBACA,gBACA,aACA,iBACA,cACA,cACA,eACA,QACA,iBACA,SACA,aACA,gBACA,iBACA,qBACA,cACA,kBACA,cACA,aACA,kBACA,cACA,eAwoBAC,cAtoBoB,CACpB,uBACA,qBACA,iBACA,gCACA,UACA,uBACA,qBACA,wBACA,oBACA,mBACA,gCACA,mBACA,oBACA,uBACA,aACA,mBACA,8BACA,oBACA,kBACA,wBACA,8BACA,6BACA,yBACA,4BACA,uBACA,WACA,iBACA,kBACA,cACA,kBACA,qBACA,gBACA,8BACA,6BACA,qBACA,mBACA,kBACA,qBACA,oBACA,0BACA,iBACA,qBACA,4BACA,mBACA,oBACA,mBACA,sBACA,mBACA,qBACA,kBACA,oBACA,oBACA,qBACA,uBACA,WACA,uBACA,qBACA,qBACA,2BACA,qBACA,kBACA,sBACA,sBACA,2BACA,2BACA,aACA,uBACA,yBACA,uBACA,4BACA,gBACA,uBACA,sBACA,iBACA,uBACA,wBACA,gBACA,iBACA,sBACA,4BACA,wBACA,sBACA,oBACA,wBACA,wBACA,mBACA,kBACA,yBACA,kBACA,iBACA,uBACA,wBACA,4BACA,aACA,cACA,mBACA,qBACA,uBACA,gCACA,mBACA,uBACA,wBACA,wBACA,oBACA,mBACA,iBACA,eACA,2BA2hBAC,MAzhBY,CACZ,WACA,eACA,UACA,QACA,YACA,SACA,SACA,UACA,YACA,aACA,SACA,WACA,SACA,aACA,YACA,YACA,WACA,QACA,OACA,YACA,WACA,WACA,QACA,KACA,QACA,WACA,cACA,QACA,UACA,QACA,OACA,SACA,WACA,QACA,QACA,UACA,WACA,UACA,SACA,YACA,WACA,YACA,WACA,YACA,cACA,OACA,QACA,WACA,OACA,UACA,SACA,gBACA,QACA,OACA,WACA,aACA,aACA,UACA,QACA,YACA,QACA,MACA,YACA,OACA,UACA,OACA,UACA,OACA,OACA,SACA,SACA,WACA,cACA,YACA,cACA,UACA,WACA,YACA,UACA,UACA,OACA,UACA,SACA,UACA,UACA,WACA,SACA,UACA,UACA,QACA,OACA,WACA,SACA,YACA,YACA,MACA,QACA,SACA,aACA,QACA,WACA,UACA,WACA,SACA,QACA,QACA,MACA,aACA,SACA,QACA,MACA,MACA,SACA,SACA,OACA,SACA,UACA,WACA,UACA,YACA,OACA,SACA,YACA,aACA,aACA,YACA,OACA,OACA,WACA,WACA,cACA,QACA,UACA,gBACA,OACA,UACA,SACA,OACA,cACA,WACA,UACA,UACA,UACA,UACA,QACA,YACA,SACA,MACA,gBACA,UACA,UACA,aACA,YACA,UACA,QACA,UACA,SACA,KACA,QACA,SACA,WACA,OACA,YACA,WACA,OACA,SACA,YACA,eACA,OACA,MACA,aACA,SACA,QACA,QACA,SACA,QACA,QACA,OACA,SACA,SACA,SACA,SACA,WACA,WACA,QACA,aACA,YACA,QACA,UACA,aACA,QACA,OACA,OACA,OACA,QACA,QACA,SACA,QACA,SACA,SACA,SACA,YACA,WACA,iBACA,WACA,SACA,OACA,UACA,QACA,SACA,WACA,cACA,UACA,UACA,cACA,SACA,eACA,UACA,WACA,SACA,WACA,WACA,WACA,aACA,aACA,YACA,YACA,QACA,WACA,SACA,SACA,cACA,QACA,WACA,OACA,WACA,SACA,SACA,UACA,WACA,SACA,aACA,SACA,YACA,WACA,aACA,SACA,WACA,aACA,WACA,YACA,QACA,WACA,QACA,QACA,WACA,YACA,WACA,UACA,UACA,WACA,WACA,UACA,OACA,OACA,QACA,OACA,SACA,SACA,UACA,OACA,QACA,OACA,SACA,SACA,QACA,SACA,WACA,SACA,eACA,QACA,MACA,UACA,SACA,aACA,SACA,SACA,QACA,SACA,SACA,QACA,UACA,OACA,SACA,UACA,QACA,UACA,WACA,WACA,YACA,WACA,SACA,OACA,cACA,UACA,gBACA,UACA,OACA,SACA,SACA,UACA,aACA,aACA,UACA,QACA,aACA,SACA,OACA,QACA,WACA,YACA,WACA,UACA,WACA,aACA,SACA,QACA,UACA,WACA,WACA,QACA,aACA,WACA,eACA,YACA,SACA,UACA,YACA,YACA,YACA,YACA,iBACA,WACA,OACA,SACA,QACA,OACA,WACA,SACA,SACA,QACA,MACA,OACA,SACA,YACA,SACA,QACA,SACA,UACA,UACA,QACA,QACA,SACA,OACA,YACA,UACA,OACA,MACA,SACA,SACA,OACA,SACA,WACA,MACA,YACA,cACA,OACA,YACA,SACA,cACA,QACA,UACA,SACA,WACA,WACA,QACA,YACA,WACA,SACA,YACA,SACA,YACA,SACA,WACA,MACA,YACA,UACA,OACA,OACA,UACA,UACA,YACA,SACA,OACA,QACA,UACA,YACA,SACA,UACA,SACA,SACA,OACA,UACA,UACA,UACA,QACA,QACA,OACA,cACA,aACA,aACA,UACA,OACA,UACA,WACA,UACA,QACA,SACA,WACA,MACA,SACA,UACA,QACA,WACA,OACA,YACA,UACA,YACA,QACA,UACA,QACA,SACA,SACA,SACA,QACA,OACA,OACA,QACA,SACA,QACA,UACA,QACA,QACA,WACA,UACA,QACA,WACA,SACA,SACA,UACA,QACA,WACA,UACA,aACA,YACA,YACA,aACA,YACA,YACA,aACA,WACA,YACA,WACA,YACA,aACA,WACA,WACA,aACA,UACA,UACA,YACA,aACA,WACA,QACA,YACA,WACA,SACA,WACA,OACA,UACA,YACA,UACA,SACA,cACA,aACA,UACA,YACA,UACA,WACA,aACA,cACA,WACA,eACA,YACA,aACA,gBACA,YACA,UACA,cACA,aACA,UACA,WACA,gBACA,YACA,SACA,QACA,YACA,YACA,SACA,cACA,YACA,YACA,YACA,YACA,WACA,WACA,UACA,WACA,QACA,WACA,UClzBIC,EAAW,CACfC,KAAQ,CACNC,SAAY,CAAC,YAAa,YAC1BC,OAAU,CAAC,gBAAiB,UAC5BC,QAAW,CAAC,eAAgB,eAC5BC,SAAY,CAAC,WAAY,cACzBC,SAAY,CAAC,aAAc,eAE7BC,IAAO,CACLC,WAAc,CAAC,YAAa,aAC5BC,OAAU,CAAC,WAAY,YACvBC,aAAgB,CAAC,UAAW,WAC5BC,WAAc,CAAC,UAAW,SAC1BC,MAAS,CAAC,cAAe,cACzBC,SAAY,CAAC,UAAW,UACxBC,MAAS,CAAC,YAAa,UACvBC,QAAW,CAAC,UAAW,aAEzBC,SAAY,CACVC,MAAS,CAAC,UAAW,cACrBC,SAAY,CAAC,YAAa,cAC1BC,OAAU,CAAC,aAAc,cACzBC,SAAY,CAAC,gBAAiB,aAC9BC,QAAW,CAAC,UAAW,aAEzBC,QAAW,CACTC,SAAY,CAAC,WAAY,aACzBC,UAAa,CAAC,WAAY,UAC1BC,SAAY,CAAC,YAAa,UAC1BC,aAAgB,CAAC,WAAY,cAC7BC,YAAe,CAAC,YAAa,aAC7BC,WAAc,CAAC,WAAY,SAE7BC,MAAS,CACPC,UAAa,CAAC,eAAgB,YAC9BC,QAAW,CAAC,YAAa,WACzBC,UAAa,CAAC,UAAW,cACzBC,YAAe,CAAC,WAAY,cAC5BC,QAAW,CAAC,UAAW,YAEzBC,KAAQ,CACNC,UAAa,CAAC,YAAa,YAC3BC,QAAW,CAAC,UAAW,WACvBC,SAAY,CAAC,WAAY,cACzBC,UAAa,CAAC,QAAS,cACvBC,OAAU,CAAC,WAAY,gBAYZC,EAAA,CACbzC,WACA0C,OAVaC,OAAOC,KAAK5C,GAWzB6C,OATaF,OAAOG,OAAO9C,GAAU+C,QAAQ,SAAAC,GAAC,OAAIL,OAAOC,KAAKI,KAU9DC,OARaN,OAAOG,OAAO9C,GAAU+C,QAAQ,SAAAC,GAAC,OAAIL,OAAOG,OAAOE,GAAGD,QAAQ,SAAAC,GAAC,OAAIA,MAShFE,SAPeP,OAAOQ,QAAQnD,GAAU+C,QAAQ,SAAAK,GAAA,IAAAC,EAAAV,OAAAW,EAAA,EAAAX,CAAAS,EAAA,GAAEG,EAAFF,EAAA,GAAML,EAANK,EAAA,UAAaV,OAAOQ,QAAQH,GAAGD,QAAQ,SAAAS,GAAA,IAAAC,EAAAd,OAAAW,EAAA,EAAAX,CAAAa,EAAA,GAAEE,EAAFD,EAAA,UAAAA,EAAA,GAAeE,IAAI,SAAAC,GAAE,OAAIL,EAAK,MAAQG,EAAK,MAAQE,SCnD7HC,EAAA,CACbhE,UALgBD,EAASC,UAAUiE,OAAO,CAC1C,UC0caC,EAAA,CACbC,WA1ZiB,CACjB,QACA,OACA,SACA,UACA,UACA,QACA,SACA,UACA,UACA,SACA,cACA,SACA,UACA,SACA,UACA,SACA,OACA,OACA,SACA,SACA,SACA,UACA,SACA,QACA,QACA,SACA,UACA,QACA,UACA,OACA,QACA,QACA,OACA,WACA,OACA,UACA,WACA,QACA,SACA,UACA,QACA,UACA,SACA,WACA,UACA,OACA,QACA,UACA,YACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,UACA,OACA,SACA,SACA,UACA,SACA,OACA,SACA,OACA,WACA,MACA,SACA,SACA,QACA,QACA,SACA,QACA,QACA,QACA,OACA,YACA,QACA,QACA,SACA,MACA,QACA,QACA,QACA,QACA,SACA,OACA,SACA,QACA,UACA,QACA,OACA,SACA,OACA,OACA,SACA,UACA,UACA,QACA,QACA,SACA,QACA,SACA,UACA,SACA,UACA,WACA,QACA,SACA,SACA,UACA,QACA,UACA,OACA,QACA,SACA,UACA,OACA,QACA,OACA,SACA,OACA,QACA,QACA,UACA,QACA,OACA,OACA,QACA,OACA,YACA,OACA,OACA,YACA,SACA,SACA,SACA,OACA,QACA,UACA,SACA,SACA,SACA,QACA,QACA,QACA,OACA,WACA,SACA,MACA,OACA,YACA,WACA,WACA,QACA,UACA,WACA,QACA,UACA,QACA,UACA,QACA,QACA,QACA,QACA,OACA,OACA,SACA,SACA,QACA,WACA,QACA,OACA,QACA,WACA,QACA,SACA,UACA,UACA,UACA,YACA,SACA,WACA,UACA,MACA,UACA,SACA,YACA,OACA,WACA,YACA,SACA,SACA,UACA,SACA,YACA,WACA,SACA,SACA,QACA,QACA,UACA,QACA,SACA,QACA,QACA,UACA,QACA,QACA,QACA,QACA,WACA,OACA,OACA,YACA,QACA,MACA,SACA,QACA,OACA,QACA,SACA,UACA,UACA,SACA,UACA,QACA,SACA,SACA,SACA,OACA,aACA,SACA,SACA,SACA,UACA,OACA,UACA,UACA,SACA,OACA,UACA,QACA,WACA,WACA,QACA,UACA,QACA,QACA,YACA,OACA,UACA,OACA,SACA,QACA,UACA,SACA,WACA,QACA,SACA,OACA,QACA,UACA,SACA,UACA,OACA,WACA,SACA,OACA,SACA,YACA,OACA,UACA,UACA,OACA,QACA,OACA,QACA,OACA,OACA,UACA,QACA,QACA,QACA,QACA,QACA,SACA,QACA,WACA,QACA,SACA,SACA,SACA,QACA,SACA,MACA,QACA,UACA,WACA,UA+GAC,UAzGgB,CAChB,QACA,UACA,WACA,QACA,QACA,QACA,SACA,SACA,QACA,SACA,WACA,SACA,UACA,QACA,SACA,SACA,WACA,SACA,WACA,WACA,QACA,YACA,QACA,MACA,SACA,OACA,QACA,QACA,YACA,OACA,SACA,QACA,OACA,QACA,QACA,QACA,QACA,WACA,SACA,SACA,WACA,QACA,UACA,SACA,WACA,WACA,SACA,QACA,UACA,UACA,UACA,UACA,SACA,SACA,OACA,OACA,SACA,OACA,SACA,SACA,SACA,SACA,aACA,MACA,SACA,OACA,SACA,WACA,OACA,UACA,QACA,SACA,SACA,QACA,UACA,QACA,UACA,OACA,SACA,OACA,YACA,UACA,UACA,QACA,SACA,OACA,YACA,SACA,SACA,aACA,SACA,UACA,SACA,WACA,UACA,YACA,UACA,WACA,OACA,UCncaC,EAAA,CACbpE,cANoBF,EAASE,cAAcgE,OAAO,CAClD,kBACA,+BCuWIK,EAAaxB,OAAAyB,EAAA,EAAAzB,CAAO,IAAI0B,IAjWP,CACrB,SACA,UACA,aACA,YACA,WACA,UACA,WACA,aACA,aACA,cACA,UACA,YACA,aACA,gBACA,MACA,WACA,aACA,OACA,OACA,OACA,aACA,WACA,eACA,SACA,UACA,QACA,OACA,WACA,QACA,WACA,YACA,eACA,WACA,WACA,UACA,WACA,WACA,eACA,SACA,eACA,cACA,iBACA,YACA,WACA,SACA,YACA,QACA,SACA,WACA,SACA,MACA,YACA,YACA,QACA,UACA,eACA,UACA,UACA,UACA,iBACA,YACA,aACA,cACA,aACA,QACA,YACA,OACA,cACA,eACA,cACA,MACA,OACA,SACA,OACA,WACA,QACA,QACA,aACA,SACA,UACA,UACA,eACA,YACA,SACA,WACA,WACA,YACA,cACA,WACA,YACA,QACA,UACA,YACA,WACA,MACA,SACA,QACA,UACA,gBACA,gBACA,QACA,UACA,mBACA,QACA,SACA,SACA,YACA,YACA,eACA,WACA,cACA,SACA,SACA,cACA,UACA,QACA,eACA,gBACA,aACA,cACA,YACA,UACA,UACA,SACA,QACA,UACA,eACA,OACA,OACA,eACA,cACA,aACA,cACA,YACA,cACA,UACA,YACA,WACA,MACA,UACA,OACA,OACA,OACA,SACA,SACA,QACA,aACA,WACA,OACA,OACA,UACA,cACA,cACA,aACA,aACA,QACA,cACA,UACA,YACA,UACA,aACA,cACA,SACA,QACA,UACA,QACA,QACA,UACA,QACA,UACA,cACA,QACA,aACA,aACA,UACA,UACA,SACA,QACA,eACA,YACA,UACA,UA2K+CP,OAtK1B,CACrB,UACA,YACA,YACA,YACA,YACA,QACA,YACA,UACA,WACA,eACA,UACA,YACA,MACA,SACA,SACA,UACA,aACA,YACA,OACA,OACA,QACA,UACA,YACA,UACA,aACA,WACA,UACA,gBACA,aACA,aACA,YACA,cACA,UACA,QACA,YACA,mBACA,QACA,SACA,aACA,SACA,QACA,UACA,UACA,gBACA,YACA,eACA,iBACA,YACA,aACA,WACA,YACA,cACA,UACA,QACA,YACA,MACA,WACA,OACA,OACA,UACA,QACA,cACA,OACA,UACA,YACA,UACA,aACA,OACA,aACA,aACA,OACA,WACA,SACA,SACA,YACA,OACA,SACA,OACA,SACA,OACA,OACA,UACA,cACA,YACA,WACA,eACA,aACA,MACA,UACA,WACA,WACA,MACA,UACA,MACA,OACA,aACA,OACA,OACA,OACA,SACA,WACA,QACA,WACA,QACA,MACA,OACA,UACA,cACA,OACA,WACA,QACA,cACA,eACA,WACA,UACA,QACA,QACA,YACA,UACA,aACA,SACA,WACA,cACA,SACA,QACA,SACA,YACA,SACA,eACA,eACA,cACA,UACA,QACA,YACA,QACA,QACA,SACA,QACA,WACA,aACA,UACA,WACA,SACA,SACA,SACA,YACA,YACA,QACA,QACA,cACA,eACA,QACA,YACA,UACA,WACA,SACA,WACA,SACA,YACA,SACA,MACA,YAMI/D,EAAK4C,OAAAyB,EAAA,EAAAzB,CAAO,IAAI0B,IAAIF,EAAcL,OAAOlE,EAASG,SC5SzCuE,EAAA,CACbC,MAlEY,CACZ,cACA,aACA,OACA,MACA,QA8DAC,YA3DkB,CAClB,aACA,QACA,QACA,aACA,mBACA,aACA,eACA,gBACA,UACA,SACA,mBACA,SACA,kBACA,cACA,mCACA,wBACA,mBACA,YACA,kBACA,mBACA,UACA,cACA,aACA,yCACA,qBACA,qBACA,gBACA,WACA,YACA,SACA,OACA,qBA4BAC,QAzBc,CACd,UACA,UACA,MACA,OACA,MACA,MACA,SACA,QACA,QACA,UACA,QACA,SACA,OACA,SACA,UACA,OACA,QACA,iBACA,SChDF,SAASC,EAAWC,GAClB,OAAOA,EAAMC,KAAKC,MAAMD,KAAKE,SAASH,EAAMI,SAwB9C,IAAMC,EAAa,CACjBC,KFuUa,CACbd,gBACApE,SEzUcA,MACdmF,QAAWzC,EAASS,SACpBiC,UAAazF,EAAWC,WACxByF,SAAYvB,EAAUhE,UACtBwF,aAAgBnB,EAAcpE,cAC9BwF,aAAcvB,EAAMC,WACpBuB,YAAaxB,EAAME,UACnBuB,oBAAqBlB,EAAcC,MACnCkB,cAAenB,EAAcE,YAC7BkB,kBAAmBnG,EAAWE,oBAC9BkG,iBAAkBpG,EAAWC,gBAGzBoG,cACJ,SAAAA,EAAYrB,GAAO,IAAAsB,EAAA,OAAAlD,OAAAmD,EAAA,EAAAnD,CAAAoD,KAAAH,IACjBC,EAAAlD,OAAAqD,EAAA,EAAArD,CAAAoD,KAAApD,OAAAsD,EAAA,EAAAtD,CAAAiD,GAAAM,KAAAH,KAAMxB,KACD4B,MAAQ,CACXC,MAAO1B,EAAWH,EAAM8B,UAHTR,yEAQjBE,KAAKO,SAAS,CAACF,MAAO1B,EAAWqB,KAAKxB,MAAM8B,4CAGrC,IAAAE,EAAAR,KACP,OACES,EAAAC,EAAAC,cAAA,OACEC,UAAU,oBACVC,QAAS,kBAAML,EAAKM,YAEpBL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBZ,KAAKxB,MAAMuC,KAA5C,KACPN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBZ,KAAKI,MAAMC,eAnBfW,IAAMC,WAqCtBC,MAZf,WACE,OACET,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cACtBhE,OAAOQ,QAAQ6B,GAAYrB,IAAI,SAAAP,GAAqB,IAAAC,EAAAV,OAAAW,EAAA,EAAAX,CAAAS,EAAA,GAAnB0D,EAAmBzD,EAAA,GAAbgD,EAAahD,EAAA,GACnD,OAAOmD,EAAAC,EAAAC,cAACQ,EAAD,CAAkBJ,KAAMA,EAAMK,IAAKL,EAAMT,QAASA,SCvExCe,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOlB,EAAAC,EAAAC,cAACiB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.0e27af9e.chunk.js","sourcesContent":["// http://www.soulcraft.co/essays/the_12_common_archetypes.html\nconst jungArchetypes = [\n  // Ego\n  \"Innocent: Free to be you and me\",\n  \"Everyman: All are created equal\",\n  \"Hero: Where there's a will, there's a way\",\n  \"Caregiver: Love your neighbor as yourself\",\n  // Soul\n  \"Explorer: Don't fence me in\",\n  \"Rebel: Rules are made to be broken\",\n  \"Lover: You're the only one\",\n  \"Creator: If you can imagine it, it can be done\",\n  // Self\n  \"Jester: You only live once\",\n  \"Sage: The truth will set you free\",\n  \"Magician: I make things happen\",\n  \"Rules: Power isn't everything, it's the only thing\"\n];\n\n// https://en.wikipedia.org/wiki/List_of_stock_characters\n// $(\".wikitable td:first-child\").map((x, y) => $(y).text())\nconst wikiStockCharacters = [\n  \"Absent-minded professor\",\n  // \"Angry Black Woman\",\n  \"Antihero\",\n  \"Author surrogate\",\n  \"Bad boy\",\n  \"Battle-axe\",\n  \"Black knight\",\n  \"Boy next door\",\n  \"Bug-eyed monster\",\n  \"Cat lady\",\n  \"Contender\",\n  \"Criminal\",\n  \"Crone\",\n  \"Damsel in distress\",\n  \"Dandy\",\n  \"Dark Lady\",\n  \"Dark Lord\",\n  \"Elderly martial arts master\",\n  \"Everyman\",\n  \"Fall guy\",\n  \"Farmer's daughter\",\n  \"Femme fatale\",\n  \"Final girl\",\n  \"Gentleman thief\",\n  \"Girl next door\",\n  \"Grande dame\",\n  \"Hag\",\n  // \"Harlequin\",\n  \"Clown\",\n  \"Hooker with a heart of gold\",\n  \"Hopeless Romantic\",\n  \"Hotshot\",\n  \"Idiot savant\",\n  \"Ingenue\",\n  \"Jock (athlete)\",\n  \"Knight-errant\",\n  \"Little Green Men\",\n  \"Loathly lady\",\n  \"Lovers\",\n  \"Mad scientist\",\n  // \"Magical Negro\",\n  \"Magician\",\n  \"Mammy archetype\",\n  \"Manic Pixie Dream Girl\",\n  // \"Mary Sue\",\n  // \"Miles Gloriosus\",\n  \"Boastful soldier\",\n  \"Mother's boy\",\n  \"Nerd\",\n  \"Nice guy\",\n  \"Noble savage\",\n  \"Outlaw\",\n  // \"Pantomime dame\",\n  // \"Petrushka\",\n  \"Jester\",\n  // \"Pierrot\",\n  \"Pantomime\",\n  // \"Princesse lointaine\",\n  \"Sweetheart of Knight-errant\",\n  \"Redshirt\",\n  \"Rightful king\",\n  // \"Senex iratus\",\n  \"Flawed father\",\n  \"Shrew\",\n  // \"Sinnekins\",\n  \"Devil on the shoulder\",\n  // \"Soubrette\",\n  \"Flirtatious female\",\n  \"Southern belle\",\n  // \"Space Nazis\",\n  \"Spear carrier\",\n  \"Straight man\",\n  \"Superhero\",\n  \"Supersoldier\",\n  \"Supervillain\",\n  \"Swashbuckler\",\n  \"Tomboy\",\n  \"Tortured artist\",\n  \"Town drunk\",\n  \"Tragic hero\",\n  // \"Tragic mulatto\",\n  \"Übermensch\",\n  \"Vice\",\n  \"Village idiot\",\n  \"Villain\",\n  \"Whisky priest\",\n  // \"White hunter\",\n  \"Hunter\",\n  \"Wise fool\",\n  \"Wise old man\",\n  \"Yokel\",\n  // \"Youxia\",\n];\n\nexport default {\n  jungArchetypes,\n  wikiStockCharacters\n};\n","// https://www.enchantedlearning.com/wordlist/adjectives.shtml\n// copy(Object.values($(\".wordlist-item\").map((x, y) => $(y).text())))\n\nconst adjectives = [\n  \"Abandoned\",\n  \"Able\",\n  \"Absolute\",\n  \"Academic\",\n  \"Acceptable\",\n  \"Acclaimed\",\n  \"Accomplished\",\n  \"Accurate\",\n  \"Aching\",\n  \"Acidic\",\n  \"Acrobatic\",\n  \"Active\",\n  \"Actual\",\n  \"Adept\",\n  \"Admirable\",\n  \"Admired\",\n  \"Adolescent\",\n  \"Adorable\",\n  \"Adored\",\n  \"Advanced\",\n  \"Adventurous\",\n  \"Affectionate\",\n  \"Afraid\",\n  \"Aged\",\n  \"Aggravating\",\n  \"Aggressive\",\n  \"Agile\",\n  \"Agitated\",\n  \"Agonizing\",\n  \"Agreeable\",\n  \"Ajar\",\n  \"Alarmed\",\n  \"Alarming\",\n  \"Alert\",\n  \"Alienated\",\n  \"Alive\",\n  \"All\",\n  \"Altruistic\",\n  \"Amazing\",\n  \"Ambitious\",\n  \"Ample\",\n  \"Amused\",\n  \"Amusing\",\n  \"Anchored\",\n  \"Ancient\",\n  \"Angelic\",\n  \"Angry\",\n  \"Anguished\",\n  \"Animated\",\n  \"Annual\",\n  \"Another\",\n  \"Antique\",\n  \"Anxious\",\n  \"Any\",\n  \"Apprehensive\",\n  \"Appropriate\",\n  \"Apt\",\n  \"Arctic\",\n  \"Arid\",\n  \"Aromatic\",\n  \"Artistic\",\n  \"Ashamed\",\n  \"Assured\",\n  \"Astonishing\",\n  \"Athletic\",\n  \"Attached\",\n  \"Attentive\",\n  \"Attractive\",\n  \"Austere\",\n  \"Authentic\",\n  \"Authorized\",\n  \"Automatic\",\n  \"Avaricious\",\n  \"Average\",\n  \"Aware\",\n  \"Awesome\",\n  \"Awful\",\n  \"Awkward\",\n  \"Babyish\",\n  \"Back\",\n  \"Bad\",\n  \"Baggy\",\n  \"Bare\",\n  \"Barren\",\n  \"Basic\",\n  \"Beautiful\",\n  \"Belated\",\n  \"Beloved\",\n  \"Beneficial\",\n  \"Best\",\n  \"Better\",\n  \"Bewitched\",\n  \"Big\",\n  \"Big-Hearted\",\n  \"Biodegradable\",\n  \"Bite-Sized\",\n  \"Bitter\",\n  \"Black\",\n  \"Black-And-White\",\n  \"Bland\",\n  \"Blank\",\n  \"Blaring\",\n  \"Bleak\",\n  \"Blind\",\n  \"Blissful\",\n  \"Blond\",\n  \"Blue\",\n  \"Blushing\",\n  \"Bogus\",\n  \"Boiling\",\n  \"Bold\",\n  \"Bony\",\n  \"Boring\",\n  \"Bossy\",\n  \"Both\",\n  \"Bouncy\",\n  \"Bountiful\",\n  \"Bowed\",\n  \"Brave\",\n  \"Breakable\",\n  \"Brief\",\n  \"Bright\",\n  \"Brilliant\",\n  \"Brisk\",\n  \"Broken\",\n  \"Bronze\",\n  \"Brown\",\n  \"Bruised\",\n  \"Bubbly\",\n  \"Bulky\",\n  \"Bumpy\",\n  \"Buoyant\",\n  \"Burdensome\",\n  \"Burly\",\n  \"Bustling\",\n  \"Busy\",\n  \"Buttery\",\n  \"Buzzing\",\n  \"Calculating\",\n  \"Calm\",\n  \"Candid\",\n  \"Canine\",\n  \"Capital\",\n  \"Carefree\",\n  \"Careful\",\n  \"Careless\",\n  \"Caring\",\n  \"Cautious\",\n  \"Cavernous\",\n  \"Celebrated\",\n  \"Charming\",\n  \"Cheap\",\n  \"Cheerful\",\n  \"Cheery\",\n  \"Chief\",\n  \"Chilly\",\n  \"Chubby\",\n  \"Circular\",\n  \"Classic\",\n  \"Clean\",\n  \"Clear\",\n  \"Clear-Cut\",\n  \"Clever\",\n  \"Close\",\n  \"Closed\",\n  \"Cloudy\",\n  \"Clueless\",\n  \"Clumsy\",\n  \"Cluttered\",\n  \"Coarse\",\n  \"Cold\",\n  \"Colorful\",\n  \"Colorless\",\n  \"Colossal\",\n  \"Comfortable\",\n  \"Common\",\n  \"Compassionate\",\n  \"Competent\",\n  \"Complete\",\n  \"Complex\",\n  \"Complicated\",\n  \"Composed\",\n  \"Concerned\",\n  \"Concrete\",\n  \"Confused\",\n  \"Conscious\",\n  \"Considerate\",\n  \"Constant\",\n  \"Content\",\n  \"Conventional\",\n  \"Cooked\",\n  \"Cool\",\n  \"Cooperative\",\n  \"Coordinated\",\n  \"Corny\",\n  \"Corrupt\",\n  \"Costly\",\n  \"Courageous\",\n  \"Courteous\",\n  \"Crafty\",\n  \"Crazy\",\n  \"Creamy\",\n  \"Creative\",\n  \"Creepy\",\n  \"Criminal\",\n  \"Crisp\",\n  \"Critical\",\n  \"Crooked\",\n  \"Crowded\",\n  \"Cruel\",\n  \"Crushing\",\n  \"Cuddly\",\n  \"Cultivated\",\n  \"Cultured\",\n  \"Cumbersome\",\n  \"Curly\",\n  \"Curvy\",\n  \"Cute\",\n  \"Cylindrical\",\n  \"Damaged\",\n  \"Damp\",\n  \"Dangerous\",\n  \"Dapper\",\n  \"Daring\",\n  \"Dark\",\n  \"Darling\",\n  \"Dazzling\",\n  \"Dead\",\n  \"Deadly\",\n  \"Deafening\",\n  \"Dear\",\n  \"Dearest\",\n  \"Decent\",\n  \"Decimal\",\n  \"Decisive\",\n  \"Deep\",\n  \"Defenseless\",\n  \"Defensive\",\n  \"Defiant\",\n  \"Deficient\",\n  \"Definite\",\n  \"Definitive\",\n  \"Delayed\",\n  \"Delectable\",\n  \"Delicious\",\n  \"Delightful\",\n  \"Delirious\",\n  \"Demanding\",\n  \"Dense\",\n  \"Dental\",\n  \"Dependable\",\n  \"Dependent\",\n  \"Descriptive\",\n  \"Deserted\",\n  \"Detailed\",\n  \"Determined\",\n  \"Devoted\",\n  \"Different\",\n  \"Difficult\",\n  \"Digital\",\n  \"Diligent\",\n  \"Dim\",\n  \"Dimpled\",\n  \"Dimwitted\",\n  \"Direct\",\n  \"Dirty\",\n  \"Disastrous\",\n  \"Discrete\",\n  \"Disfigured\",\n  \"Disguised\",\n  \"Disgusting\",\n  \"Dishonest\",\n  \"Disloyal\",\n  \"Dismal\",\n  \"Distant\",\n  \"Distinct\",\n  \"Distorted\",\n  \"Dizzy\",\n  \"Dopey\",\n  \"Doting\",\n  \"Double\",\n  \"Downright\",\n  \"Drab\",\n  \"Drafty\",\n  \"Dramatic\",\n  \"Dreary\",\n  \"Droopy\",\n  \"Dry\",\n  \"Dual\",\n  \"Dull\",\n  \"Dutiful\",\n  \"Each\",\n  \"Eager\",\n  \"Early\",\n  \"Earnest\",\n  \"Easy\",\n  \"Easy-Going\",\n  \"Ecstatic\",\n  \"Edible\",\n  \"Educated\",\n  \"Elaborate\",\n  \"Elastic\",\n  \"Elated\",\n  \"Elderly\",\n  \"Electric\",\n  \"Elegant\",\n  \"Elementary\",\n  \"Elliptical\",\n  \"Embarrassed\",\n  \"Embellished\",\n  \"Eminent\",\n  \"Emotional\",\n  \"Empty\",\n  \"Enchanted\",\n  \"Enchanting\",\n  \"Energetic\",\n  \"Enlightened\",\n  \"Enormous\",\n  \"Enraged\",\n  \"Entire\",\n  \"Envious\",\n  \"Equal\",\n  \"Equatorial\",\n  \"Essential\",\n  \"Esteemed\",\n  \"Ethical\",\n  \"Euphoric\",\n  \"Even\",\n  \"Evergreen\",\n  \"Everlasting\",\n  \"Every\",\n  \"Evil\",\n  \"Exalted\",\n  \"Excellent\",\n  \"Excitable\",\n  \"Excited\",\n  \"Exciting\",\n  \"Exemplary\",\n  \"Exhausted\",\n  \"Exotic\",\n  \"Expensive\",\n  \"Experienced\",\n  \"Expert\",\n  \"Extra-Large\",\n  \"Extra-Small\",\n  \"Extraneous\",\n  \"Extroverted\",\n  \"Fabulous\",\n  \"Failing\",\n  \"Faint\",\n  \"Fair\",\n  \"Faithful\",\n  \"Fake\",\n  \"False\",\n  \"Familiar\",\n  \"Famous\",\n  \"Fancy\",\n  \"Fantastic\",\n  \"Far\",\n  \"Far-Flung\",\n  \"Far-Off\",\n  \"Faraway\",\n  \"Fast\",\n  \"Fat\",\n  \"Fatal\",\n  \"Fatherly\",\n  \"Favorable\",\n  \"Favorite\",\n  \"Fearful\",\n  \"Fearless\",\n  \"Feisty\",\n  \"Feline\",\n  \"Female\",\n  \"Feminine\",\n  \"Few\",\n  \"Fickle\",\n  \"Filthy\",\n  \"Fine\",\n  \"Finished\",\n  \"Firm\",\n  \"First\",\n  \"Firsthand\",\n  \"Fitting\",\n  \"Fixed\",\n  \"Flaky\",\n  \"Flamboyant\",\n  \"Flashy\",\n  \"Flat\",\n  \"Flawed\",\n  \"Flawless\",\n  \"Flickering\",\n  \"Flimsy\",\n  \"Flippant\",\n  \"Flowery\",\n  \"Fluffy\",\n  \"Fluid\",\n  \"Flustered\",\n  \"Focused\",\n  \"Fond\",\n  \"Foolhardy\",\n  \"Foolish\",\n  \"Forceful\",\n  \"Forked\",\n  \"Formal\",\n  \"Forsaken\",\n  \"Forthright\",\n  \"Fortunate\",\n  \"Fragrant\",\n  \"Frail\",\n  \"Frank\",\n  \"Frayed\",\n  \"Free\",\n  \"French\",\n  \"Frequent\",\n  \"Fresh\",\n  \"Friendly\",\n  \"Frightened\",\n  \"Frightening\",\n  \"Frigid\",\n  \"Frilly\",\n  \"Frivolous\",\n  \"Frizzy\",\n  \"Front\",\n  \"Frosty\",\n  \"Frozen\",\n  \"Frugal\",\n  \"Fruitful\",\n  \"Full\",\n  \"Fumbling\",\n  \"Functional\",\n  \"Funny\",\n  \"Fussy\",\n  \"Fuzzy\",\n  \"Gargantuan\",\n  \"Gaseous\",\n  \"General\",\n  \"Generous\",\n  \"Gentle\",\n  \"Genuine\",\n  \"Giant\",\n  \"Giddy\",\n  \"Gifted\",\n  \"Gigantic\",\n  \"Giving\",\n  \"Glamorous\",\n  \"Glaring\",\n  \"Glass\",\n  \"Gleaming\",\n  \"Gleeful\",\n  \"Glistening\",\n  \"Glittering\",\n  \"Gloomy\",\n  \"Glorious\",\n  \"Glossy\",\n  \"Glum\",\n  \"Golden\",\n  \"Good\",\n  \"Good-Natured\",\n  \"Gorgeous\",\n  \"Graceful\",\n  \"Gracious\",\n  \"Grand\",\n  \"Grandiose\",\n  \"Granular\",\n  \"Grateful\",\n  \"Grave\",\n  \"Gray\",\n  \"Great\",\n  \"Greedy\",\n  \"Green\",\n  \"Gregarious\",\n  \"Grim\",\n  \"Grimy\",\n  \"Gripping\",\n  \"Grizzled\",\n  \"Gross\",\n  \"Grotesque\",\n  \"Grouchy\",\n  \"Grounded\",\n  \"Growing\",\n  \"Growling\",\n  \"Grown\",\n  \"Grubby\",\n  \"Gruesome\",\n  \"Grumpy\",\n  \"Guilty\",\n  \"Gullible\",\n  \"Gummy\",\n  \"Hairy\",\n  \"Half\",\n  \"Handmade\",\n  \"Handsome\",\n  \"Handy\",\n  \"Happy\",\n  \"Happy-Go-Lucky\",\n  \"Hard\",\n  \"Hard-To-Find\",\n  \"Harmful\",\n  \"Harmless\",\n  \"Harmonious\",\n  \"Harsh\",\n  \"Hasty\",\n  \"Hateful\",\n  \"Haunting\",\n  \"Healthy\",\n  \"Heartfelt\",\n  \"Hearty\",\n  \"Heavenly\",\n  \"Heavy\",\n  \"Hefty\",\n  \"Helpful\",\n  \"Helpless\",\n  \"Hidden\",\n  \"Hideous\",\n  \"High\",\n  \"High-Level\",\n  \"Hilarious\",\n  \"Hoarse\",\n  \"Hollow\",\n  \"Homely\",\n  \"Honest\",\n  \"Honorable\",\n  \"Honored\",\n  \"Hopeful\",\n  \"Horrible\",\n  \"Hospitable\",\n  \"Hot\",\n  \"Huge\",\n  \"Humble\",\n  \"Humiliating\",\n  \"Humming\",\n  \"Humongous\",\n  \"Hungry\",\n  \"Hurtful\",\n  \"Husky\",\n  \"Icky\",\n  \"Icy\",\n  \"Ideal\",\n  \"Idealistic\",\n  \"Identical\",\n  \"Idiotic\",\n  \"Idle\",\n  \"Idolized\",\n  \"Ignorant\",\n  \"Ill\",\n  \"Ill-Fated\",\n  \"Ill-Informed\",\n  \"Illegal\",\n  \"Illiterate\",\n  \"Illustrious\",\n  \"Imaginary\",\n  \"Imaginative\",\n  \"Immaculate\",\n  \"Immaterial\",\n  \"Immediate\",\n  \"Immense\",\n  \"Impartial\",\n  \"Impassioned\",\n  \"Impeccable\",\n  \"Imperfect\",\n  \"Imperturbable\",\n  \"Impish\",\n  \"Impolite\",\n  \"Important\",\n  \"Impossible\",\n  \"Impractical\",\n  \"Impressionable\",\n  \"Impressive\",\n  \"Improbable\",\n  \"Impure\",\n  \"Inborn\",\n  \"Incomparable\",\n  \"Incompatible\",\n  \"Incomplete\",\n  \"Inconsequential\",\n  \"Incredible\",\n  \"Indelible\",\n  \"Indolent\",\n  \"Inexperienced\",\n  \"Infamous\",\n  \"Infantile\",\n  \"Infatuated\",\n  \"Inferior\",\n  \"Infinite\",\n  \"Informal\",\n  \"Innocent\",\n  \"Insecure\",\n  \"Insidious\",\n  \"Insignificant\",\n  \"Insistent\",\n  \"Instructive\",\n  \"Insubstantial\",\n  \"Intelligent\",\n  \"Intent\",\n  \"Intentional\",\n  \"Interesting\",\n  \"Internal\",\n  \"International\",\n  \"Intrepid\",\n  \"Ironclad\",\n  \"Irresponsible\",\n  \"Irritating\",\n  \"Itchy\",\n  \"Jaded\",\n  \"Jagged\",\n  \"Jam-Packed\",\n  \"Jaunty\",\n  \"Jealous\",\n  \"Jittery\",\n  \"Joint\",\n  \"Jolly\",\n  \"Jovial\",\n  \"Joyful\",\n  \"Joyous\",\n  \"Jubilant\",\n  \"Judicious\",\n  \"Juicy\",\n  \"Jumbo\",\n  \"Jumpy\",\n  \"Junior\",\n  \"Juvenile\",\n  \"Kaleidoscopic\",\n  \"Keen\",\n  \"Key\",\n  \"Kind\",\n  \"Kindhearted\",\n  \"Kindly\",\n  \"Klutzy\",\n  \"Knobby\",\n  \"Knotty\",\n  \"Knowing\",\n  \"Knowledgeable\",\n  \"Known\",\n  \"Kooky\",\n  \"Kosher\",\n  \"Lame\",\n  \"Lanky\",\n  \"Large\",\n  \"Last\",\n  \"Lasting\",\n  \"Late\",\n  \"Lavish\",\n  \"Lawful\",\n  \"Lazy\",\n  \"Leading\",\n  \"Leafy\",\n  \"Lean\",\n  \"Left\",\n  \"Legal\",\n  \"Legitimate\",\n  \"Light\",\n  \"Lighthearted\",\n  \"Likable\",\n  \"Likely\",\n  \"Limited\",\n  \"Limp\",\n  \"Limping\",\n  \"Linear\",\n  \"Lined\",\n  \"Liquid\",\n  \"Little\",\n  \"Live\",\n  \"Lively\",\n  \"Livid\",\n  \"Loathsome\",\n  \"Lone\",\n  \"Lonely\",\n  \"Long\",\n  \"Long-Term\",\n  \"Loose\",\n  \"Lopsided\",\n  \"Lost\",\n  \"Loud\",\n  \"Lovable\",\n  \"Lovely\",\n  \"Loving\",\n  \"Low\",\n  \"Loyal\",\n  \"Lucky\",\n  \"Lumbering\",\n  \"Luminous\",\n  \"Lumpy\",\n  \"Lustrous\",\n  \"Luxurious\",\n  \"Mad\",\n  \"Made-Up\",\n  \"Magnificent\",\n  \"Majestic\",\n  \"Major\",\n  \"Male\",\n  \"Mammoth\",\n  \"Married\",\n  \"Marvelous\",\n  \"Masculine\",\n  \"Massive\",\n  \"Mature\",\n  \"Meager\",\n  \"Mealy\",\n  \"Mean\",\n  \"Measly\",\n  \"Meaty\",\n  \"Medical\",\n  \"Mediocre\",\n  \"Medium\",\n  \"Meek\",\n  \"Mellow\",\n  \"Melodic\",\n  \"Memorable\",\n  \"Menacing\",\n  \"Merry\",\n  \"Messy\",\n  \"Metallic\",\n  \"Mild\",\n  \"Milky\",\n  \"Mindless\",\n  \"Miniature\",\n  \"Minor\",\n  \"Minty\",\n  \"Miserable\",\n  \"Miserly\",\n  \"Misguided\",\n  \"Misty\",\n  \"Mixed\",\n  \"Modern\",\n  \"Modest\",\n  \"Moist\",\n  \"Monstrous\",\n  \"Monthly\",\n  \"Monumental\",\n  \"Moral\",\n  \"Mortified\",\n  \"Motherly\",\n  \"Motionless\",\n  \"Mountainous\",\n  \"Muddy\",\n  \"Muffled\",\n  \"Multicolored\",\n  \"Mundane\",\n  \"Murky\",\n  \"Mushy\",\n  \"Musty\",\n  \"Muted\",\n  \"Mysterious\",\n  \"Naive\",\n  \"Narrow\",\n  \"Nasty\",\n  \"Natural\",\n  \"Naughty\",\n  \"Nautical\",\n  \"Near\",\n  \"Neat\",\n  \"Necessary\",\n  \"Needy\",\n  \"Negative\",\n  \"Neglected\",\n  \"Negligible\",\n  \"Neighboring\",\n  \"Nervous\",\n  \"New\",\n  \"Next\",\n  \"Nice\",\n  \"Nifty\",\n  \"Nimble\",\n  \"Nippy\",\n  \"Nocturnal\",\n  \"Noisy\",\n  \"Nonstop\",\n  \"Normal\",\n  \"Notable\",\n  \"Noted\",\n  \"Noteworthy\",\n  \"Novel\",\n  \"Noxious\",\n  \"Numb\",\n  \"Nutritious\",\n  \"Nutty\",\n  \"Obedient\",\n  \"Obese\",\n  \"Oblong\",\n  \"Obvious\",\n  \"Occasional\",\n  \"Odd\",\n  \"Oddball\",\n  \"Offbeat\",\n  \"Offensive\",\n  \"Official\",\n  \"Oily\",\n  \"Old\",\n  \"Old-Fashioned\",\n  \"Only\",\n  \"Open\",\n  \"Optimal\",\n  \"Optimistic\",\n  \"Opulent\",\n  \"Orange\",\n  \"Orderly\",\n  \"Ordinary\",\n  \"Organic\",\n  \"Original\",\n  \"Ornate\",\n  \"Ornery\",\n  \"Other\",\n  \"Our\",\n  \"Outgoing\",\n  \"Outlandish\",\n  \"Outlying\",\n  \"Outrageous\",\n  \"Outstanding\",\n  \"Oval\",\n  \"Overcooked\",\n  \"Overdue\",\n  \"Overjoyed\",\n  \"Overlooked\",\n  \"Palatable\",\n  \"Pale\",\n  \"Paltry\",\n  \"Parallel\",\n  \"Parched\",\n  \"Partial\",\n  \"Passionate\",\n  \"Past\",\n  \"Pastel\",\n  \"Peaceful\",\n  \"Peppery\",\n  \"Perfect\",\n  \"Perfumed\",\n  \"Periodic\",\n  \"Perky\",\n  \"Personal\",\n  \"Pertinent\",\n  \"Pesky\",\n  \"Pessimistic\",\n  \"Petty\",\n  \"Phony\",\n  \"Physical\",\n  \"Piercing\",\n  \"Pink\",\n  \"Pitiful\",\n  \"Plain\",\n  \"Plaintive\",\n  \"Plastic\",\n  \"Playful\",\n  \"Pleasant\",\n  \"Pleased\",\n  \"Pleasing\",\n  \"Plump\",\n  \"Plush\",\n  \"Pointed\",\n  \"Pointless\",\n  \"Poised\",\n  \"Polished\",\n  \"Polite\",\n  \"Political\",\n  \"Poor\",\n  \"Popular\",\n  \"Portly\",\n  \"Posh\",\n  \"Positive\",\n  \"Possible\",\n  \"Potable\",\n  \"Powerful\",\n  \"Powerless\",\n  \"Practical\",\n  \"Precious\",\n  \"Present\",\n  \"Prestigious\",\n  \"Pretty\",\n  \"Previous\",\n  \"Pricey\",\n  \"Prickly\",\n  \"Primary\",\n  \"Prime\",\n  \"Pristine\",\n  \"Private\",\n  \"Prize\",\n  \"Probable\",\n  \"Productive\",\n  \"Profitable\",\n  \"Profuse\",\n  \"Proper\",\n  \"Proud\",\n  \"Prudent\",\n  \"Punctual\",\n  \"Pungent\",\n  \"Puny\",\n  \"Pure\",\n  \"Purple\",\n  \"Pushy\",\n  \"Putrid\",\n  \"Puzzled\",\n  \"Puzzling\",\n  \"Quaint\",\n  \"Qualified\",\n  \"Quarrelsome\",\n  \"Quarterly\",\n  \"Queasy\",\n  \"Querulous\",\n  \"Questionable\",\n  \"Quick\",\n  \"Quick-Witted\",\n  \"Quiet\",\n  \"Quintessential\",\n  \"Quirky\",\n  \"Quixotic\",\n  \"Quizzical\",\n  \"Radiant\",\n  \"Ragged\",\n  \"Rapid\",\n  \"Rare\",\n  \"Rash\",\n  \"Raw\",\n  \"Ready\",\n  \"Real\",\n  \"Realistic\",\n  \"Reasonable\",\n  \"Recent\",\n  \"Reckless\",\n  \"Rectangular\",\n  \"Red\",\n  \"Reflecting\",\n  \"Regal\",\n  \"Regular\",\n  \"Reliable\",\n  \"Relieved\",\n  \"Remarkable\",\n  \"Remorseful\",\n  \"Remote\",\n  \"Repentant\",\n  \"Repulsive\",\n  \"Required\",\n  \"Respectful\",\n  \"Responsible\",\n  \"Revolving\",\n  \"Rewarding\",\n  \"Rich\",\n  \"Right\",\n  \"Rigid\",\n  \"Ringed\",\n  \"Ripe\",\n  \"Roasted\",\n  \"Robust\",\n  \"Rosy\",\n  \"Rotating\",\n  \"Rotten\",\n  \"Rough\",\n  \"Round\",\n  \"Rowdy\",\n  \"Royal\",\n  \"Rubbery\",\n  \"Ruddy\",\n  \"Rude\",\n  \"Rundown\",\n  \"Runny\",\n  \"Rural\",\n  \"Rusty\",\n  \"Sad\",\n  \"Safe\",\n  \"Salty\",\n  \"Same\",\n  \"Sandy\",\n  \"Sane\",\n  \"Sarcastic\",\n  \"Sardonic\",\n  \"Satisfied\",\n  \"Scaly\",\n  \"Scarce\",\n  \"Scared\",\n  \"Scary\",\n  \"Scented\",\n  \"Scholarly\",\n  \"Scientific\",\n  \"Scornful\",\n  \"Scratchy\",\n  \"Scrawny\",\n  \"Second\",\n  \"Second-Hand\",\n  \"Secondary\",\n  \"Secret\",\n  \"Self-Assured\",\n  \"Self-Reliant\",\n  \"Selfish\",\n  \"Sentimental\",\n  \"Separate\",\n  \"Serene\",\n  \"Serious\",\n  \"Serpentine\",\n  \"Several\",\n  \"Severe\",\n  \"Shabby\",\n  \"Shadowy\",\n  \"Shady\",\n  \"Shallow\",\n  \"Shameful\",\n  \"Shameless\",\n  \"Sharp\",\n  \"Shimmering\",\n  \"Shiny\",\n  \"Shocked\",\n  \"Shocking\",\n  \"Shoddy\",\n  \"Short\",\n  \"Short-Term\",\n  \"Showy\",\n  \"Shrill\",\n  \"Shy\",\n  \"Sick\",\n  \"Silent\",\n  \"Silky\",\n  \"Silly\",\n  \"Silver\",\n  \"Similar\",\n  \"Simple\",\n  \"Simplistic\",\n  \"Sinful\",\n  \"Single\",\n  \"Sizzling\",\n  \"Skeletal\",\n  \"Skinny\",\n  \"Sleepy\",\n  \"Slight\",\n  \"Slim\",\n  \"Slimy\",\n  \"Slippery\",\n  \"Slow\",\n  \"Slushy\",\n  \"Small\",\n  \"Smart\",\n  \"Smoggy\",\n  \"Smooth\",\n  \"Smug\",\n  \"Snappy\",\n  \"Snarling\",\n  \"Sneaky\",\n  \"Sniveling\",\n  \"Snoopy\",\n  \"Sociable\",\n  \"Soft\",\n  \"Soggy\",\n  \"Solid\",\n  \"Somber\",\n  \"Some\",\n  \"Sophisticated\",\n  \"Sore\",\n  \"Sorrowful\",\n  \"Soulful\",\n  \"Soupy\",\n  \"Sour\",\n  \"Spanish\",\n  \"Sparkling\",\n  \"Sparse\",\n  \"Specific\",\n  \"Spectacular\",\n  \"Speedy\",\n  \"Spherical\",\n  \"Spicy\",\n  \"Spiffy\",\n  \"Spirited\",\n  \"Spiteful\",\n  \"Splendid\",\n  \"Spotless\",\n  \"Spotted\",\n  \"Spry\",\n  \"Square\",\n  \"Squeaky\",\n  \"Squiggly\",\n  \"Stable\",\n  \"Staid\",\n  \"Stained\",\n  \"Stale\",\n  \"Standard\",\n  \"Starchy\",\n  \"Stark\",\n  \"Starry\",\n  \"Steel\",\n  \"Steep\",\n  \"Sticky\",\n  \"Stiff\",\n  \"Stimulating\",\n  \"Stingy\",\n  \"Stormy\",\n  \"Straight\",\n  \"Strange\",\n  \"Strict\",\n  \"Strident\",\n  \"Striking\",\n  \"Striped\",\n  \"Strong\",\n  \"Studious\",\n  \"Stunning\",\n  \"Stupendous\",\n  \"Stupid\",\n  \"Sturdy\",\n  \"Stylish\",\n  \"Subdued\",\n  \"Submissive\",\n  \"Substantial\",\n  \"Subtle\",\n  \"Suburban\",\n  \"Sudden\",\n  \"Sugary\",\n  \"Sunny\",\n  \"Super\",\n  \"Superb\",\n  \"Superficial\",\n  \"Superior\",\n  \"Supportive\",\n  \"Sure-Footed\",\n  \"Surprised\",\n  \"Suspicious\",\n  \"Svelte\",\n  \"Sweaty\",\n  \"Sweet\",\n  \"Sweltering\",\n  \"Swift\",\n  \"Sympathetic\",\n  \"Talkative\",\n  \"Tall\",\n  \"Tame\",\n  \"Tan\",\n  \"Tangible\",\n  \"Tart\",\n  \"Tasty\",\n  \"Tattered\",\n  \"Taut\",\n  \"Tedious\",\n  \"Teeming\",\n  \"Tempting\",\n  \"Tender\",\n  \"Tense\",\n  \"Tepid\",\n  \"Terrible\",\n  \"Terrific\",\n  \"Testy\",\n  \"Thankful\",\n  \"That\",\n  \"These\",\n  \"Thick\",\n  \"Thin\",\n  \"Third\",\n  \"Thirsty\",\n  \"This\",\n  \"Thorny\",\n  \"Thorough\",\n  \"Those\",\n  \"Thoughtful\",\n  \"Threadbare\",\n  \"Thrifty\",\n  \"Thunderous\",\n  \"Tidy\",\n  \"Tight\",\n  \"Timely\",\n  \"Tinted\",\n  \"Tiny\",\n  \"Tired\",\n  \"Torn\",\n  \"Total\",\n  \"Tough\",\n  \"Tragic\",\n  \"Trained\",\n  \"Traumatic\",\n  \"Treasured\",\n  \"Tremendous\",\n  \"Triangular\",\n  \"Tricky\",\n  \"Trifling\",\n  \"Trim\",\n  \"Trivial\",\n  \"Troubled\",\n  \"True\",\n  \"Trusting\",\n  \"Trustworthy\",\n  \"Trusty\",\n  \"Truthful\",\n  \"Tubby\",\n  \"Turbulent\",\n  \"Twin\",\n  \"Ugly\",\n  \"Ultimate\",\n  \"Unacceptable\",\n  \"Unaware\",\n  \"Uncomfortable\",\n  \"Uncommon\",\n  \"Unconscious\",\n  \"Understated\",\n  \"Unequaled\",\n  \"Uneven\",\n  \"Unfinished\",\n  \"Unfit\",\n  \"Unfolded\",\n  \"Unfortunate\",\n  \"Unhappy\",\n  \"Unhealthy\",\n  \"Uniform\",\n  \"Unimportant\",\n  \"Unique\",\n  \"United\",\n  \"Unkempt\",\n  \"Unknown\",\n  \"Unlawful\",\n  \"Unlined\",\n  \"Unlucky\",\n  \"Unnatural\",\n  \"Unpleasant\",\n  \"Unrealistic\",\n  \"Unripe\",\n  \"Unruly\",\n  \"Unselfish\",\n  \"Unsightly\",\n  \"Unsteady\",\n  \"Unsung\",\n  \"Untidy\",\n  \"Untimely\",\n  \"Untried\",\n  \"Untrue\",\n  \"Unused\",\n  \"Unusual\",\n  \"Unwelcome\",\n  \"Unwieldy\",\n  \"Unwilling\",\n  \"Unwitting\",\n  \"Unwritten\",\n  \"Upbeat\",\n  \"Upright\",\n  \"Upset\",\n  \"Urban\",\n  \"Usable\",\n  \"Used\",\n  \"Useful\",\n  \"Useless\",\n  \"Utilized\",\n  \"Utter\",\n  \"Vacant\",\n  \"Vague\",\n  \"Vain\",\n  \"Valid\",\n  \"Valuable\",\n  \"Vapid\",\n  \"Variable\",\n  \"Vast\",\n  \"Velvety\",\n  \"Venerated\",\n  \"Vengeful\",\n  \"Verifiable\",\n  \"Vibrant\",\n  \"Vicious\",\n  \"Victorious\",\n  \"Vigilant\",\n  \"Vigorous\",\n  \"Villainous\",\n  \"Violent\",\n  \"Violet\",\n  \"Virtual\",\n  \"Virtuous\",\n  \"Visible\",\n  \"Vital\",\n  \"Vivacious\",\n  \"Vivid\",\n  \"Voluminous\",\n  \"Wan\",\n  \"Warlike\",\n  \"Warm\",\n  \"Warmhearted\",\n  \"Warped\",\n  \"Wary\",\n  \"Wasteful\",\n  \"Watchful\",\n  \"Waterlogged\",\n  \"Watery\",\n  \"Wavy\",\n  \"Weak\",\n  \"Wealthy\",\n  \"Weary\",\n  \"Webbed\",\n  \"Wee\",\n  \"Weekly\",\n  \"Weepy\",\n  \"Weighty\",\n  \"Weird\",\n  \"Welcome\",\n  \"Well-Documented\",\n  \"Well-Groomed\",\n  \"Well-Informed\",\n  \"Well-Lit\",\n  \"Well-Made\",\n  \"Well-Off\",\n  \"Well-To-Do\",\n  \"Well-Worn\",\n  \"Wet\",\n  \"Which\",\n  \"Whimsical\",\n  \"Whirlwind\",\n  \"Whispered\",\n  \"White\",\n  \"Whole\",\n  \"Whopping\",\n  \"Wicked\",\n  \"Wide\",\n  \"Wide-Eyed\",\n  \"Wiggly\",\n  \"Wild\",\n  \"Willing\",\n  \"Wilted\",\n  \"Winding\",\n  \"Windy\",\n  \"Winged\",\n  \"Wiry\",\n  \"Wise\",\n  \"Witty\",\n  \"Wobbly\",\n  \"Woeful\",\n  \"Wonderful\",\n  \"Wooden\",\n  \"Woozy\",\n  \"Wordy\",\n  \"Worldly\",\n  \"Worn\",\n  \"Worried\",\n  \"Worrisome\",\n  \"Worse\",\n  \"Worst\",\n  \"Worthless\",\n  \"Worthwhile\",\n  \"Worthy\",\n  \"Wrathful\",\n  \"Wretched\",\n  \"Writhing\",\n  \"Wrong\",\n  \"Wry\",\n  \"Yawning\",\n  \"Yearly\",\n  \"Yellow\",\n  \"Yellowish\",\n  \"Young\",\n  \"Youthful\",\n  \"Yummy\",\n  \"Zany\",\n  \"Zealous\",\n  \"Zesty\",\n  \"Zigzag\",\n]\n\nexport default {\n  adjectives\n};\n","// http://www.can-i-get-a.com/\n\nconst locations = [\n  \"Operating Room\",\n  \"Driveway\",\n  \"Stables\",\n  \"Kitchen\",\n  \"Walk-In Closet\",\n  \"Man Cave\",\n  \"Garage at Home\",\n  \"Mechanic's Garage\",\n  \"Executive Office\",\n  \"Oval Office\",\n  \"Apollo Capsule\",\n  \"Torture Chamber\",\n  \"Sex Dungeon\",\n  \"Safe Room\",\n  \"Hotel Lobby\",\n  \"Weight Room\",\n  \"Tailor\",\n  \"Change Room at a Store\",\n  \"Café\",\n  \"Terrasse\",\n  \"Dr. Office\",\n  \"Lawyer Office\",\n  \"Boat Deck\",\n  \"Sauna\",\n  \"Hot Tub\",\n  \"Singles Bar\",\n  \"Star's Dressing Room\",\n  \"Batcave\",\n  \"Limo\",\n  \"Ambulance\",\n  \"Private Jet\",\n  \"Hoarder's Shed\",\n  \"Green House\",\n  \"Billiard Room\",\n  \"Library\",\n  \"Dorm Room\",\n  \"Brewery\",\n  \"Basement\",\n  \"Attic\",\n  \"Storage Locker\",\n  \"Bike Shop\",\n  \"Artist Studio\",\n  \"Hayloft\",\n  \"Dark Alley\",\n  \"Jail Cell\",\n  \"Moving Van\",\n  \"Stasis Chamber\",\n  \"Beach\",\n  \"Poker Room\",\n  \"Ball Pit\",\n  \"Butcher's\",\n  \"Meat Freezer\",\n  \"Boxing Ring\",\n  \"Jeweller's\",\n  \"Sweat Shop\",\n  \"Candy Store\",\n  \"Antiques Store\",\n  \"Museum Storage\",\n  \"Classroom\",\n  \"Teacher's Lounge\",\n  \"VIP Lounge\",\n  \"Airport Gate\",\n  \"Morgue\",\n  \"Abandoned Home\",\n  \"Trailer Home\",\n  \"Campsite\",\n  \"Cave\",\n  \"Sinkhole\",\n  \"Quicksand\",\n  \"Military Tent\",\n  \"Ladies Restroom\",\n  \"Men's Restroom\",\n  \"Penthouse Apt\",\n  \"Slum Apt\",\n  \"Bus\",\n  \"English Pub\",\n  \"Shoe Shop\",\n  \"Recording Studio\",\n  \"Observatory\",\n  \"Ice Fishing Shack\",\n  \"Cockpit\",\n  \"Bank\",\n  \"Dep/Bodega/Convenience Store\",\n  \"Florist\",\n  \"Rowboat\",\n  \"Life Raft\",\n  \"Yoga Class\",\n  \"Dance Hall\",\n  \"Skate Park\",\n  \"Playground\",\n  \"Golf Green\",\n  \"Bus Stop\",\n  \"Vintage Shop\",\n  \"Museum Hall\",\n  \"Workshop\",\n  \"Tennis Court\",\n  \"Food Cart/Truck\",\n  \"Courtroom\",\n  \"Photobooth\",\n  \"Fallout Shelter\",\n  \"Hobo Rail Car\",\n  \"Hot Dog Stand\",\n  \"Hair Salon\",\n  \"Airlock\",\n  \"Subway Car\",\n  \"Balcony\",\n  \"Arcade\",\n  \"Greenhouse\",\n  \"Botanical Garden\",\n  \"Arctic Research Camp\",\n  \"WWI Trench\",\n  \"Tea House\",\n  \"High School Lockers\",\n  \"Bowling Alley\",\n  \"Chemistry Lab\",\n  \"Liquor Store\",\n  \"Playground\",\n  \"Public Pool\",\n  \"Whitewater Raft\",\n  \"Bird Sanctuary\",\n  \"Kennel\",\n  \"Projection Room\",\n  \"Candy Store\",\n  \"Bedroom\",\n  \"Bachelor Pad\",\n  \"Man Cave\",\n  \"Movie Set\",\n  \"Fancy Restaurant\",\n  \"Flea Market\",\n  \"Hotel Lobby\",\n  \"Classroom\",\n  \"House's Roof\",\n  \"Convention Booth\",\n  \"Waiting Room\",\n  \"Car Showroom\",\n  \"Bike Rack\",\n  \"Monastery\",\n  \"Rooftop Farm\",\n  \"Stasis Chamber\",\n  \"Holodeck\",\n  \"Fusion Chamber\",\n  \"Airlock\",\n  \"Hyperdrive Cavity\",\n  \"CERN Lab\",\n  \"Kids Table\",\n  \"LAN Party\",\n  \"Gaming Store\",\n  \"Craft Beer Pub\",\n  \"Minivan\",\n  \"Shipping Container\",\n  \"Ski Lodge\",\n  \"Tiny Cottage\",\n  \"Manhattan Apartment\",\n  \"Balcony\",\n  \"Sports Luxury Suite\",\n  \"Wine & Cheese\",\n  \"Vernissage\",\n  \"Fashion Studio\",\n  \"Radio Booth\",\n  \"Wine Cellar\",\n  \"Cold Storage\",\n  \"Sauna\",\n  \"Horse Carriage\",\n  \"Saloon\",\n  \"Chess Club\",\n  \"Flight Lounge\",\n  \"Secluded Beach\",\n  \"Registrar's Office\",\n  \"Weight Room\",\n  \"Bulk Food Store\",\n  \"Throne Room\",\n  \"Bank Vault\",\n  \"In an Ambulance\",\n  \"Photo Booth\",\n  \"Apple Store\"\n];\nconst relationships = [\n  \"Bus Driver/A Regular\",\n  \"Bartender/Waitress\",\n  \"Cook/Sous-Chef\",\n  \"Schoolbus Driver/The Last Kid\",\n  \"EMT/Cop\",\n  \"Team Owner/Superstar\",\n  \"Two Shoe Designers\",\n  \"Watchmaker/Apprentice\",\n  \"X-Ray Tech/Doctor\",\n  \"Vampire/Werewolf\",\n  \"Millionaire/Yacht Salesperson\",\n  \"Producer/Manager\",\n  \"Gardener/Pool Boy\",\n  \"Conductor/1st Violin\",\n  \"Jockey/Vet\",\n  \"Union Leader/CEO\",\n  \"Skateboard Salesperson/Teen\",\n  \"Foreman/Architect\",\n  \"Torturer/Jester\",\n  \"Prince(ss)/Stablehand\",\n  \"Dog Food Chef/Cat Food Chef\",\n  \"Postal Worker/UPS Delivery\",\n  \"Buggy Driver/Car Owner\",\n  \"Supervillain/Prison Guard\",\n  \"Tatoo Artist/Piercer\",\n  \"Baby/Pet\",\n  \"Hostage/Robber\",\n  \"Ambassador/King\",\n  \"Spy/Handler\",\n  \"Pitcher/Catcher\",\n  \"Arms Dealer/Parent\",\n  \"Mayor/Janitor\",\n  \"Street Hustler/Off-Duty Cop\",\n  \"Piano Tuner/Concept Artist\",\n  \"Person/Future Self\",\n  \"Newlywed/Bellhop\",\n  \"Doctor/Assassin\",\n  \"Hobo/Street Vendor\",\n  \"Blacksmith/Jockey\",\n  \"Astronaut/Mission Chief\",\n  \"Tailor/Cobbler\",\n  \"Foster Parent/Teen\",\n  \"Entrepreneur/Bank Officer\",\n  \"Dictator/General\",\n  \"Socialite/Plumber\",\n  \"Senator/Lobbyist\",\n  \"Executive/Assistant\",\n  \"Party Animal/Cop\",\n  \"Spouse/Homewrecker\",\n  \"Rival Explorers\",\n  \"Principal/Teacher\",\n  \"Astronomer/Meteor\",\n  \"Robot/Its Inventor\",\n  \"Forest Ranger/Camper\",\n  \"Bear/Cub\",\n  \"Landscaper/Homeowner\",\n  \"Scriptwriter/Actor\",\n  \"Programmer/Student\",\n  \"Sailor/Lighthouse Keeper\",\n  \"Pilot/Flight Tower\",\n  \"Dentist/Patient\",\n  \"Optometrist/Patient\",\n  \"Pharmacist/Customer\",\n  \"Nurse/Recovering Patient\",\n  \"Midwife/Expecting Mother\",\n  \"Two Judges\",\n  \"Professor/Star Pupil\",\n  \"Physical Trainer/Actor\",\n  \"Archivist/Researcher\",\n  \"Museum Curator/Politician\",\n  \"Author/Editor\",\n  \"Journalist/Informant\",\n  \"Traveler/Translator\",\n  \"Sculptor/Model\",\n  \"Photographer/Subject\",\n  \"Bride/Wedding Planner\",\n  \"Coach/Referee\",\n  \"Chef/Maitre D'\",\n  \"Hairdresser/Regular\",\n  \"Telephone Operator/Caller\",\n  \"Ticket Agent/Traveler\",\n  \"Airplane Passengers\",\n  \"Bartender/Regular\",\n  \"Babysitter/New Parent\",\n  \"Pet Groomer/Pet Owner\",\n  \"Cashier/Customer\",\n  \"Teenager/Mentor\",\n  \"Security Guard/Janitor\",\n  \"Woodsman/Camper\",\n  \"Cyclist/Driver\",\n  \"Rare Book Collectors\",\n  \"Taxi Driver/Passenger\",\n  \"Limo Driver/Trophy Spouse\",\n  \"Kid/Parent\",\n  \"Teen/Parent\",\n  \"Teen/Grandparent\",\n  \"Parent/Grandparent\",\n  \"Logger/Forest Ranger\",\n  \"Fishing Boat Captain/1st Mate\",\n  \"Farmer/Scarecrow\",\n  \"Spouse/Parent-In-Law\",\n  \"Student/Rich Relative\",\n  \"Stunt Driver/Director\",\n  \"Forger/Crime Boss\",\n  \"Castaway/Coconut\",\n  \"AI/Space Pilot\",\n  \"Joker/Sucker\",\n  \"Physicist/Mathematician\"\n];\nconst words = [\n  \"Commerce\",\n  \"Constitution\",\n  \"Patriot\",\n  \"Pride\",\n  \"Prejudice\",\n  \"Speech\",\n  \"Crowds\",\n  \"Stadium\",\n  \"Architect\",\n  \"Blueprints\",\n  \"Prince\",\n  \"Princess\",\n  \"Recess\",\n  \"Government\",\n  \"Elections\",\n  \"President\",\n  \"Resident\",\n  \"House\",\n  \"Home\",\n  \"Homophobe\",\n  \"Disagree\",\n  \"Argument\",\n  \"Couch\",\n  \"TV\",\n  \"Radio\",\n  \"Internet\",\n  \"Programming\",\n  \"Alone\",\n  \"Friends\",\n  \"Trust\",\n  \"Loan\",\n  \"Borrow\",\n  \"Interest\",\n  \"Hobby\",\n  \"Hotel\",\n  \"Leaving\",\n  \"Arriving\",\n  \"Airport\",\n  \"Jetlag\",\n  \"Time Zone\",\n  \"Shifting\",\n  \"Uppercase\",\n  \"Capitals\",\n  \"Geography\",\n  \"Cartography\",\n  \"Maps\",\n  \"Boots\",\n  \"Marching\",\n  \"Army\",\n  \"Camping\",\n  \"Nature\",\n  \"Tree Planting\",\n  \"Paper\",\n  \"Pens\",\n  \"Literacy\",\n  \"Newspapers\",\n  \"Journalism\",\n  \"Weather\",\n  \"Storm\",\n  \"Hurricane\",\n  \"Boxer\",\n  \"UPS\",\n  \"Overnight\",\n  \"Moon\",\n  \"Eclipse\",\n  \"Dark\",\n  \"Trapped\",\n  \"Care\",\n  \"Bats\",\n  \"Batman\",\n  \"Heroes\",\n  \"Villains\",\n  \"Comic Books\",\n  \"Collector\",\n  \"Flea Market\",\n  \"Vintage\",\n  \"Antiques\",\n  \"Civil War\",\n  \"Uniform\",\n  \"Weapons\",\n  \"Atom\",\n  \"Physics\",\n  \"Genius\",\n  \"Genuine\",\n  \"Forgery\",\n  \"Painting\",\n  \"Artist\",\n  \"Poverty\",\n  \"Charity\",\n  \"Heart\",\n  \"Love\",\n  \"Platonic\",\n  \"Greece\",\n  \"Democracy\",\n  \"Volunteer\",\n  \"Tea\",\n  \"Sugar\",\n  \"Coffee\",\n  \"Bitterness\",\n  \"Lemon\",\n  \"Salesman\",\n  \"Theater\",\n  \"Director\",\n  \"Movies\",\n  \"Actor\",\n  \"Agent\",\n  \"Spy\",\n  \"Infiltrate\",\n  \"Prison\",\n  \"Guard\",\n  \"Key\",\n  \"Pie\",\n  \"Circle\",\n  \"Square\",\n  \"Fair\",\n  \"Unfair\",\n  \"Rivalry\",\n  \"Siblings\",\n  \"Parents\",\n  \"Pregnancy\",\n  \"Rain\",\n  \"Clouds\",\n  \"Rorschach\",\n  \"Psychology\",\n  \"Auditorium\",\n  \"Cafeteria\",\n  \"Quad\",\n  \"Pecs\",\n  \"Six-pack\",\n  \"Ten-Four\",\n  \"Quarterback\",\n  \"Goals\",\n  \"Careers\",\n  \"Directionless\",\n  \"Hobo\",\n  \"Packing\",\n  \"Moving\",\n  \"Mail\",\n  \"Post Office\",\n  \"Telegram\",\n  \"Titanic\",\n  \"Iceberg\",\n  \"Lettuce\",\n  \"Migrant\",\n  \"Geese\",\n  \"Foie Gras\",\n  \"Cheese\",\n  \"Ham\",\n  \"Peanut Butter\",\n  \"Tobacco\",\n  \"Smoking\",\n  \"Break Room\",\n  \"Interview\",\n  \"Vampire\",\n  \"Ghost\",\n  \"Haunted\",\n  \"Trauma\",\n  \"ER\",\n  \"Blood\",\n  \"Period\",\n  \"Teenager\",\n  \"Mall\",\n  \"Milkshake\",\n  \"Fountain\",\n  \"Rome\",\n  \"Soccer\",\n  \"World Cup\",\n  \"World Series\",\n  \"WWII\",\n  \"WWI\",\n  \"Versailles\",\n  \"Palace\",\n  \"Salon\",\n  \"Witty\",\n  \"Kitten\",\n  \"Laser\",\n  \"Shark\",\n  \"Pool\",\n  \"Hustle\",\n  \"Boston\",\n  \"Accent\",\n  \"London\",\n  \"Medieval\",\n  \"Jousting\",\n  \"Armor\",\n  \"Blacksmith\",\n  \"Horseshoe\",\n  \"Lucky\",\n  \"Unlucky\",\n  \"Unrequited\",\n  \"Crush\",\n  \"Pact\",\n  \"Oath\",\n  \"Oats\",\n  \"Goats\",\n  \"Cliff\",\n  \"Canyon\",\n  \"Burro\",\n  \"Jockey\",\n  \"Boxers\",\n  \"Briefs\",\n  \"Briefcase\",\n  \"Minister\",\n  \"Prime Minister\",\n  \"Politics\",\n  \"Debate\",\n  \"Club\",\n  \"Diamond\",\n  \"Heart\",\n  \"Shovel\",\n  \"Cemetary\",\n  \"Video Games\",\n  \"Dungeon\",\n  \"Hostage\",\n  \"Negotiation\",\n  \"Unions\",\n  \"Big Business\",\n  \"Savings\",\n  \"Monument\",\n  \"Statue\",\n  \"Sculptor\",\n  \"Da Vinci\",\n  \"Notebook\",\n  \"Journalism\",\n  \"Expedition\",\n  \"Exploring\",\n  \"Adventure\",\n  \"Quest\",\n  \"Question\",\n  \"Riddle\",\n  \"Waffle\",\n  \"Maple Syrup\",\n  \"Beans\",\n  \"Has Been\",\n  \"Fame\",\n  \"Infamous\",\n  \"Wanted\",\n  \"Outlaw\",\n  \"Sheriff\",\n  \"Showdown\",\n  \"Sunset\",\n  \"Refraction\",\n  \"Vision\",\n  \"Eloquence\",\n  \"Password\",\n  \"Encryption\",\n  \"Hacker\",\n  \"Pentagon\",\n  \"Top Secret\",\n  \"Taxonomy\",\n  \"Astrology\",\n  \"Twins\",\n  \"Nonsense\",\n  \"Codes\",\n  \"Doors\",\n  \"Elevator\",\n  \"Escalator\",\n  \"Exercise\",\n  \"Fitness\",\n  \"Purpost\",\n  \"Porpoise\",\n  \"Tortoise\",\n  \"Glasses\",\n  \"Nerd\",\n  \"Jock\",\n  \"Bimbo\",\n  \"Ditz\",\n  \"Blonde\",\n  \"U-Turn\",\n  \"Give Up\",\n  \"Quit\",\n  \"Logic\",\n  \"Logo\",\n  \"Arrows\",\n  \"Slings\",\n  \"Giant\",\n  \"Dragon\",\n  \"Treasure\",\n  \"Locket\",\n  \"Pop and Lock\",\n  \"Disco\",\n  \"Rap\",\n  \"Country\",\n  \"Anthem\",\n  \"Revolution\",\n  \"Regime\",\n  \"Reggae\",\n  \"Remix\",\n  \"Studio\",\n  \"Grammy\",\n  \"Oscar\",\n  \"Trashed\",\n  \"Diva\",\n  \"Diving\",\n  \"Penalty\",\n  \"Crowd\",\n  \"Tickets\",\n  \"Sold Out\",\n  \"Sell Out\",\n  \"Rock Star\",\n  \"Contract\",\n  \"Expand\",\n  \"Pond\",\n  \"Time Travel\",\n  \"Paradox\",\n  \"Pandora's Box\",\n  \"Present\",\n  \"Part\",\n  \"Future\",\n  \"Sci-Fi\",\n  \"Jetpack\",\n  \"Supersonic\",\n  \"Sonic Boom\",\n  \"Fighter\",\n  \"Lover\",\n  \"Confession\",\n  \"Church\",\n  \"Holy\",\n  \"Smoke\",\n  \"Detector\",\n  \"Detective\",\n  \"Rejected\",\n  \"Ejected\",\n  \"Dejected\",\n  \"Depression\",\n  \"Hiding\",\n  \"Bully\",\n  \"Playing\",\n  \"Slacking\",\n  \"Laziness\",\n  \"Sleep\",\n  \"Experiment\",\n  \"Academic\",\n  \"Presentation\",\n  \"Christmas\",\n  \"Hunger\",\n  \"Hanging\",\n  \"Execution\",\n  \"Anonymous\",\n  \"Addiction\",\n  \"Treatment\",\n  \"Trick or Treat\",\n  \"Disguise\",\n  \"Mask\",\n  \"Cowboy\",\n  \"Fired\",\n  \"Jobs\",\n  \"Paycheck\",\n  \"Casino\",\n  \"Luxury\",\n  \"Taxes\",\n  \"Dom\",\n  \"Bomb\",\n  \"Sphere\",\n  \"Biosphere\",\n  \"Planet\",\n  \"Space\",\n  \"Comets\",\n  \"The Sun\",\n  \"Sunburn\",\n  \"Beach\",\n  \"Towel\",\n  \"Shower\",\n  \"Soap\",\n  \"Dishwater\",\n  \"Kitchen\",\n  \"Cook\",\n  \"Hat\",\n  \"Winter\",\n  \"Summer\",\n  \"Fall\",\n  \"Spring\",\n  \"Mattress\",\n  \"Bed\",\n  \"Seduction\",\n  \"Subtraction\",\n  \"Math\",\n  \"Chemistry\",\n  \"Dating\",\n  \"Breaking Up\",\n  \"Anger\",\n  \"Revenge\",\n  \"Murder\",\n  \"Tickling\",\n  \"Children\",\n  \"Birth\",\n  \"Pregnancy\",\n  \"Surprise\",\n  \"Attack\",\n  \"Defensive\",\n  \"Guilty\",\n  \"Innocence\",\n  \"Virgin\",\n  \"Cocktail\",\n  \"Bar\",\n  \"Bartender\",\n  \"Tipping\",\n  \"Cows\",\n  \"Milk\",\n  \"Surgery\",\n  \"Sterile\",\n  \"Spaceship\",\n  \"Vacuum\",\n  \"Dust\",\n  \"Ashes\",\n  \"Cricket\",\n  \"Basbeball\",\n  \"Umpire\",\n  \"Referee\",\n  \"Hockey\",\n  \"Trophy\",\n  \"Wife\",\n  \"Husband\",\n  \"Wedding\",\n  \"Divorce\",\n  \"Court\",\n  \"Judge\",\n  \"Jury\",\n  \"Executioner\",\n  \"Guillotine\",\n  \"Aristocrat\",\n  \"Peasant\",\n  \"Farm\",\n  \"Tractor\",\n  \"Property\",\n  \"Manners\",\n  \"Table\",\n  \"Chairs\",\n  \"Chairman\",\n  \"CEO\",\n  \"Stocks\",\n  \"Trading\",\n  \"Cards\",\n  \"Birthday\",\n  \"Cake\",\n  \"Chocolate\",\n  \"Vanilla\",\n  \"Ice Cream\",\n  \"Cones\",\n  \"Traffic\",\n  \"Drugs\",\n  \"Mental\",\n  \"Health\",\n  \"Wealth\",\n  \"Vault\",\n  \"Pole\",\n  \"Tall\",\n  \"Short\",\n  \"Temper\",\n  \"Sword\",\n  \"Samurai\",\n  \"Japan\",\n  \"China\",\n  \"Registry\",\n  \"Engaged\",\n  \"Rings\",\n  \"Olympics\",\n  \"Silver\",\n  \"Stains\",\n  \"Laundry\",\n  \"River\",\n  \"Provoked\",\n  \"Hostile\",\n  \"Infuriated\",\n  \"Irritated\",\n  \"Withdrawn\",\n  \"Suspicious\",\n  \"Skeptical\",\n  \"Sarcastic\",\n  \"Judgmental\",\n  \"Loathing\",\n  \"Repugnant\",\n  \"Revolted\",\n  \"Revulsion\",\n  \"Detestable\",\n  \"Aversion\",\n  \"Hesitant\",\n  \"Remorseful\",\n  \"Ashamed\",\n  \"Ignored\",\n  \"Powerless\",\n  \"Vulnerable\",\n  \"Inferior\",\n  \"Empty\",\n  \"Abandoned\",\n  \"Isolated\",\n  \"Apathy\",\n  \"Inspired\",\n  \"Open\",\n  \"Playful\",\n  \"Sensitive\",\n  \"Hopeful\",\n  \"Loving\",\n  \"Provocative\",\n  \"Courageous\",\n  \"Enraged\",\n  \"Resentful\",\n  \"Jealous\",\n  \"Insecure\",\n  \"Devastated\",\n  \"Embarrassed\",\n  \"Ridicule\",\n  \"Disrespected\",\n  \"Alienated\",\n  \"Inadequate\",\n  \"Insignificant\",\n  \"Worthless\",\n  \"Worried\",\n  \"Overwhelmed\",\n  \"Frightened\",\n  \"Shocked\",\n  \"Dismayed\",\n  \"Disillusioned\",\n  \"Perplexed\",\n  \"Amazed\",\n  \"Eager\",\n  \"Energetic\",\n  \"Liberated\",\n  \"Amused\",\n  \"Inquisitive\",\n  \"Important\",\n  \"Confident\",\n  \"Respected\",\n  \"Fulfilled\",\n  \"Powerful\",\n  \"Accepted\",\n  \"Distant\",\n  \"Critical\",\n  \"Bored\",\n  \"Intimate\",\n  \"Proud\"\n];\n\nexport default {\n  locations,\n  relationships,\n  words\n};\n","// https://www.thejuntoinstitute.com/blog-posts/the-junto-emotion-wheel-why-and-how-we-use-it\n\nconst emotions = {\n  \"Love\": {\n    \"Peaceful\": [\"Satisfied\", \"Tranquil\"],\n    \"Tender\": [\"Compassionate\", \"Caring\"],\n    \"Longing\": [\"Affectionate\", \"Sentimental\"],\n    \"Romantic\": [\"Enamored\", \"Attractive\"],\n    \"Desirous\": [\"Infatuated\", \"Passionate\"]\n  },\n  \"Joy\": {\n    \"Enthralled\": [\"Rapturous\", \"Enchanted\"],\n    \"Elated\": [\"Jubilant\", \"Euphoric\"],\n    \"Enthusiastic\": [\"Zealous\", \"Excited\"],\n    \"Optimistic\": [\"Hopeful\", \"Eager\"],\n    \"Proud\": [\"Illustrious\", \"Triumphant\"],\n    \"Cheerful\": [\"Playful\", \"Jovial\"],\n    \"Happy\": [\"Delighted\", \"Amused\"],\n    \"Content\": [\"Pleased\", \"Thankful\"]\n  },\n  \"Surprise\": {\n    \"Moved\": [\"Touched\", \"Stimulated\"],\n    \"Overcome\": [\"Astounded\", \"Speechless\"],\n    \"Amazed\": [\"Awe-Struck\", \"Astonished\"],\n    \"Confused\": [\"Disillusioned\", \"Perplexed\"],\n    \"Stunned\": [\"Shocked\", \"Dismayed\"]\n  },\n  \"Sadness\": {\n    \"Hopeless\": [\"Anguised\", \"Powerless\"],\n    \"Neglected\": [\"Isolated\", \"Lonely\"],\n    \"Shameful\": [\"Regretful\", \"Guilty\"],\n    \"Disappointed\": [\"Dismayed\", \"Displeased\"],\n    \"Melancholic\": [\"Depressed\", \"Sorrowful\"],\n    \"Distressed\": [\"Agonized\", \"Hurt\"]\n  },\n  \"Anger\": {\n    \"Disgusted\": [\"Contemptuous\", \"Revolted\"],\n    \"Envious\": [\"Resentful\", \"Jealous\"],\n    \"Irritable\": [\"Annoyed\", \"Aggravated\"],\n    \"Exasperated\": [\"Agitated\", \"Frustrated\"],\n    \"Enraged\": [\"Hateful\", \"Hostile\"]\n  },\n  \"Fear\": {\n    \"Horrified\": [\"Mortified\", \"Dreadful\"],\n    \"Nervous\": [\"Worried\", \"Anxious\"],\n    \"Insecure\": [\"Inferior\", \"Inadequate\"],\n    \"Terrified\": [\"Panic\", \"Hysterical\"],\n    \"Scared\": [\"Helpless\", \"Frightened\"]\n  }\n};\n\nconst level1 = Object.keys(emotions);\n\nconst level2 = Object.values(emotions).flatMap(x => Object.keys(x));\n\nconst level3 = Object.values(emotions).flatMap(x => Object.values(x).flatMap(x => x));\n\nconst combined = Object.entries(emotions).flatMap(([e1, x]) => Object.entries(x).flatMap(([e2, x]) => x.map(e3 => e1 + \" | \" + e2 + \" | \" + e3)));\n\nexport default {\n  emotions,\n  level1,\n  level2,\n  level3,\n  combined\n};\n","import CanIGetA from './CanIGetA';\n\nconst locations = CanIGetA.locations.concat([\n  \"Moon\",\n]);\n\nexport default {\n  locations\n};\n","/*\n\nStacey, Mary, Joe, Deborah, Tiffany, Stuart, Brittney, Alex, Charlene, Kate, Jacob, Raphael, , Michael, Susie, Matthew, Mark, Luke, John, Jesus, Mohammad, Jack, Jill, Lily, Harry, Robert, Clarence, Lindsey, Monica, James, Diane, Diana, Susanne, Susan, Dan, Stan, Jean, Ryan, Jessica, Amanda, Celine, Joshua, Florence, Vincent, Dwayne, George, Henry, Elizabeth, Sophie, Anastasia, Christian, Christiano, Christine, Caitlyn, Barbara, Wilma, Betty, Fredrick, Sean, Leonardo, Johnny, Emily, Neil, Erica, Rebecca, Tim, Danielle, Daniel, Ilya, Angela, Shira, Elena, Sonia, Tony, Anthony, Brian, Thomas, Nathaniel, Ronald, Mac, Dennis, Craig, Jim, Richard, Cornelia, Cornelius, Philip, Delilah, Harold, Hunter, Derek, Connor, Tyler, Howard, Marcus, Brad, Spencer, Isabelle, Isabella, Lisa, Aubrey, Marcus, Leah, Rose, Madeline, Cynthia, Carl, Andy, David, Arnold, Paul, Claire, Clara, Natasha, Alice, Jennifer, Joanna, Anna, Megan, Donna, Marissa, Pam, Marvin, Gavin, Janet, Haley, Sheryl, Doug, Douglas,\n\nSteph, Jeremy, Margaret, Marge, Maggie, Homer, Bart, Karen, Bruce, Clark, Tom, Peter, Valentina, Emma, Tonya, Sydney, Keith, Marsha, Marshall, Dale, Mick, Nick, Nicholas, Carol, Edward, Ed, Colleen, Scott, Lauren, Kathryn, Karen,\n\nBernstein, Smith, Miller, Johnson, Anderson, Jensen, Lowe, McDonald, Howard, Brown, Doyle, Holmes,\n\nconst firstNames = [\n  \"Corbin\",\n  \"Trevor\",\n  \"Chad\",\n  \"Clen\",\n  \"Jed\",\n  \"Cleetus\",\n  \"Steven\",\n  \"Spencer\",\n  \"Antonio\",\n  \"Clarence\",\n  \"Beauregard\",\n  \"William\",\n  \"Albert\",\n  \"Tanner\",\n  \"Wesley\",\n\n  \"Alex\",\n  \"Sasha\",\n  \"Sam\",\n  \"Jordan\",\n  \"Morgan\",\n  \"Taylor\",\n  \"Madison\",\n\n  \"Ursula\",\n  \"Sheryl\",\n  \"Clarabelle\",\n  \"Dorothy\",\n  \"Eve\",\n  \"Clarice\",\n  \"Ellen\"\n];\n\nconst lastNames = [\n  \"Rogers\",\n  \"Murphy\",\n  \"Payton\"\n];\n\n*/\n\n// https://www.names.org/lists/most-popular/all-time/\n// copy($(\"td a\").map((x, y) => $(y).text()).slice(0, 300))\nconst firstNames = [\n  \"James\",\n  \"John\",\n  \"Robert\",\n  \"Michael\",\n  \"William\",\n  \"David\",\n  \"Joseph\",\n  \"Richard\",\n  \"Charles\",\n  \"Thomas\",\n  \"Christopher\",\n  \"Daniel\",\n  \"Matthew\",\n  \"George\",\n  \"Anthony\",\n  \"Donald\",\n  \"Paul\",\n  \"Mark\",\n  \"Edward\",\n  \"Andrew\",\n  \"Steven\",\n  \"Kenneth\",\n  \"Joshua\",\n  \"Kevin\",\n  \"Brian\",\n  \"Ronald\",\n  \"Timothy\",\n  \"Jason\",\n  \"Jeffrey\",\n  \"Ryan\",\n  \"Jacob\",\n  \"Frank\",\n  \"Gary\",\n  \"Nicholas\",\n  \"Eric\",\n  \"Stephen\",\n  \"Jonathan\",\n  \"Larry\",\n  \"Justin\",\n  \"Raymond\",\n  \"Scott\",\n  \"Brandon\",\n  \"Samuel\",\n  \"Benjamin\",\n  \"Gregory\",\n  \"Jack\",\n  \"Henry\",\n  \"Patrick\",\n  \"Alexander\",\n  \"Walter\",\n  \"Dennis\",\n  \"Jerry\",\n  \"Tyler\",\n  \"Aaron\",\n  \"Peter\",\n  \"Jose\",\n  \"Douglas\",\n  \"Adam\",\n  \"Harold\",\n  \"Nathan\",\n  \"Zachary\",\n  \"Arthur\",\n  \"Carl\",\n  \"Albert\",\n  \"Kyle\",\n  \"Lawrence\",\n  \"Joe\",\n  \"Willie\",\n  \"Gerald\",\n  \"Roger\",\n  \"Keith\",\n  \"Jeremy\",\n  \"Terry\",\n  \"Harry\",\n  \"Jesse\",\n  \"Sean\",\n  \"Christian\",\n  \"Ethan\",\n  \"Ralph\",\n  \"Austin\",\n  \"Roy\",\n  \"Louis\",\n  \"Billy\",\n  \"Bruce\",\n  \"Bryan\",\n  \"Eugene\",\n  \"Noah\",\n  \"Jordan\",\n  \"Dylan\",\n  \"Russell\",\n  \"Wayne\",\n  \"Alan\",\n  \"Howard\",\n  \"Juan\",\n  \"Fred\",\n  \"Philip\",\n  \"Vincent\",\n  \"Gabriel\",\n  \"Randy\",\n  \"Logan\",\n  \"Victor\",\n  \"Bobby\",\n  \"Johnny\",\n  \"Phillip\",\n  \"Martin\",\n  \"Bradley\",\n  \"Clarence\",\n  \"Shawn\",\n  \"Travis\",\n  \"Ernest\",\n  \"Stanley\",\n  \"Craig\",\n  \"Leonard\",\n  \"Earl\",\n  \"Jimmy\",\n  \"Carlos\",\n  \"Francis\",\n  \"Cody\",\n  \"Danny\",\n  \"Todd\",\n  \"Elijah\",\n  \"Dale\",\n  \"Caleb\",\n  \"Isaac\",\n  \"Cameron\",\n  \"Mason\",\n  \"Luis\",\n  \"Alex\",\n  \"Allen\",\n  \"Joel\",\n  \"Nathaniel\",\n  \"Evan\",\n  \"Luke\",\n  \"Frederick\",\n  \"Curtis\",\n  \"Norman\",\n  \"Marvin\",\n  \"Tony\",\n  \"Glenn\",\n  \"Antonio\",\n  \"Rodney\",\n  \"Melvin\",\n  \"Alfred\",\n  \"Edwin\",\n  \"Steve\",\n  \"Lucas\",\n  \"Chad\",\n  \"Theodore\",\n  \"Adrian\",\n  \"Lee\",\n  \"Mary\",\n  \"Elizabeth\",\n  \"Patricia\",\n  \"Jennifer\",\n  \"Linda\",\n  \"Barbara\",\n  \"Margaret\",\n  \"Susan\",\n  \"Dorothy\",\n  \"Sarah\",\n  \"Jessica\",\n  \"Helen\",\n  \"Nancy\",\n  \"Betty\",\n  \"Karen\",\n  \"Lisa\",\n  \"Anna\",\n  \"Sandra\",\n  \"Ashley\",\n  \"Emily\",\n  \"Kimberly\",\n  \"Donna\",\n  \"Ruth\",\n  \"Carol\",\n  \"Michelle\",\n  \"Laura\",\n  \"Amanda\",\n  \"Melissa\",\n  \"Rebecca\",\n  \"Deborah\",\n  \"Stephanie\",\n  \"Sharon\",\n  \"Kathleen\",\n  \"Cynthia\",\n  \"Amy\",\n  \"Shirley\",\n  \"Angela\",\n  \"Catherine\",\n  \"Emma\",\n  \"Virginia\",\n  \"Katherine\",\n  \"Brenda\",\n  \"Pamela\",\n  \"Frances\",\n  \"Nicole\",\n  \"Christine\",\n  \"Samantha\",\n  \"Rachel\",\n  \"Evelyn\",\n  \"Alice\",\n  \"Janet\",\n  \"Carolyn\",\n  \"Debra\",\n  \"Martha\",\n  \"Maria\",\n  \"Marie\",\n  \"Heather\",\n  \"Diane\",\n  \"Julie\",\n  \"Joyce\",\n  \"Grace\",\n  \"Victoria\",\n  \"Rose\",\n  \"Joan\",\n  \"Christina\",\n  \"Kelly\",\n  \"Ann\",\n  \"Lauren\",\n  \"Doris\",\n  \"Jean\",\n  \"Julia\",\n  \"Judith\",\n  \"Kathryn\",\n  \"Mildred\",\n  \"Cheryl\",\n  \"Lillian\",\n  \"Megan\",\n  \"Olivia\",\n  \"Andrea\",\n  \"Hannah\",\n  \"Sara\",\n  \"Jacqueline\",\n  \"Teresa\",\n  \"Gloria\",\n  \"Janice\",\n  \"Theresa\",\n  \"Judy\",\n  \"Beverly\",\n  \"Madison\",\n  \"Denise\",\n  \"Jane\",\n  \"Marilyn\",\n  \"Amber\",\n  \"Danielle\",\n  \"Brittany\",\n  \"Diana\",\n  \"Abigail\",\n  \"Irene\",\n  \"Annie\",\n  \"Charlotte\",\n  \"Ruby\",\n  \"Natalie\",\n  \"Lori\",\n  \"Alexis\",\n  \"Kayla\",\n  \"Tiffany\",\n  \"Sophia\",\n  \"Florence\",\n  \"Kathy\",\n  \"Louise\",\n  \"Lois\",\n  \"Tammy\",\n  \"Crystal\",\n  \"Bonnie\",\n  \"Phyllis\",\n  \"Anne\",\n  \"Isabella\",\n  \"Taylor\",\n  \"Erin\",\n  \"Alyssa\",\n  \"Josephine\",\n  \"Ella\",\n  \"Allison\",\n  \"Shannon\",\n  \"Edna\",\n  \"Peggy\",\n  \"Tina\",\n  \"Robin\",\n  \"Dawn\",\n  \"Rita\",\n  \"Eleanor\",\n  \"Wanda\",\n  \"Ethel\",\n  \"Paula\",\n  \"Norma\",\n  \"Clara\",\n  \"Audrey\",\n  \"Ellen\",\n  \"Marjorie\",\n  \"Jamie\",\n  \"Leslie\",\n  \"Connie\",\n  \"Gladys\",\n  \"Edith\",\n  \"Carrie\",\n  \"Eva\",\n  \"Wendy\",\n  \"Valerie\",\n  \"Courtney\",\n  \"Elaine\",\n];\n\n// https://www.rong-chang.com/namesdict/100_last_names.htm\n// copy(Object.values($(\"b a\").map((x, y) => $(y).text())))\n\nconst lastNames = [\n  \"Smith\",\n  \"Johnson\",\n  \"Williams\",\n  \"Jones\",\n  \"Brown\",\n  \"Davis\",\n  \"Miller\",\n  \"Wilson\",\n  \"Moore\",\n  \"Taylor\",\n  \"Anderson\",\n  \"Thomas\",\n  \"Jackson\",\n  \"White\",\n  \"Harris\",\n  \"Martin\",\n  \"Thompson\",\n  \"Garcia\",\n  \"Martinez\",\n  \"Robinson\",\n  \"Clark\",\n  \"Rodriguez\",\n  \"Lewis\",\n  \"Lee\",\n  \"Walker\",\n  \"Hall\",\n  \"Allen\",\n  \"Young\",\n  \"Hernandez\",\n  \"King\",\n  \"Wright\",\n  \"Lopez\",\n  \"Hill\",\n  \"Scott\",\n  \"Green\",\n  \"Adams\",\n  \"Baker\",\n  \"Gonzalez\",\n  \"Nelson\",\n  \"Carter\",\n  \"Mitchell\",\n  \"Perez\",\n  \"Roberts\",\n  \"Turner\",\n  \"Phillips\",\n  \"Campbell\",\n  \"Parker\",\n  \"Evans\",\n  \"Edwards\",\n  \"Collins\",\n  \"Stewart\",\n  \"Sanchez\",\n  \"Morris\",\n  \"Rogers\",\n  \"Reed\",\n  \"Cook\",\n  \"Morgan\",\n  \"Bell\",\n  \"Murphy\",\n  \"Bailey\",\n  \"Rivera\",\n  \"Cooper\",\n  \"Richardson\",\n  \"Cox\",\n  \"Howard\",\n  \"Ward\",\n  \"Torres\",\n  \"Peterson\",\n  \"Gray\",\n  \"Ramirez\",\n  \"James\",\n  \"Watson\",\n  \"Brooks\",\n  \"Kelly\",\n  \"Sanders\",\n  \"Price\",\n  \"Bennett\",\n  \"Wood\",\n  \"Barnes\",\n  \"Ross\",\n  \"Henderson\",\n  \"Coleman\",\n  \"Jenkins\",\n  \"Perry\",\n  \"Powell\",\n  \"Long\",\n  \"Patterson\",\n  \"Hughes\",\n  \"Flores\",\n  \"Washington\",\n  \"Butler\",\n  \"Simmons\",\n  \"Foster\",\n  \"Gonzales\",\n  \"Bryant \",\n  \"Alexander\",\n  \"Russell\",\n  \"Griffin \",\n  \"Diaz\",\n  \"Hayes\",\n];\n\nexport default {\n  firstNames,\n  lastNames\n};\n","import CanIGetA from './CanIGetA';\n\nconst relationships = CanIGetA.relationships.concat([\n  \"Sibling-in-laws\",\n  \"Drug Dealer/Client\"\n]);\n\nexport default {\n  relationships\n};\n","import CanIGetA from './CanIGetA';\n\n\n/*\nagility, talent, performance, flexibility, adjacent, symmetry, abstract, modern, nefarious, neutrality, propulsion, physics, art,  symbolism, exploration, expression, exploitation, responsibility, ownership, leadership, variety, wisdom, suggestion, measurement, conformity, gratitude, imperfection, progress, amorphous, disappointment, luck, unexpected, offensive, defensive, opportunity, sexuality, indifference, indulgence, hedonism, criticality, proof, probability, monstrosity, relativity, connection, empathy, spirituality, energy, belief, opinion intelligence, sufficient, attraction, manipulation, preference, reverence, accumulation, precision, occlusion, Oblivion, infinite, speed, death, reincarnation, enlightenment, growth, artificiality, malleability, desire, lust, cognitive dissonance, confusion, paralysis, nightmare, dream, drama, story, forgiveness, charity, legacy, law, expectation, reality, imaginary, surreality, safety, protection, transferability, ability, skill, practice, comparison, masculinity, maximum, minimum, femininity, aggression, passiveness, disaster, finale, encore, support, absence, presence, justice, rarity, unity, combination, formlessness, emptiness, fullness, resistance, culture, equivalence, inequality, morale, slapstick\n\n*/\n\n// https://examples.yourdictionary.com/examples-of-abstract-nouns.html\n// copy(Object.values($(\"li\").map((x, y) => $(y).text())).slice(0, 182).map(x => x.trim()))\nconst abstractNouns1 = [\n  \"Beauty\",\n  \"Bravery\",\n  \"Brilliance\",\n  \"Brutality\",\n  \"Calmness\",\n  \"Charity\",\n  \"Coldness\",\n  \"Compassion\",\n  \"Confidence\",\n  \"Contentment\",\n  \"Courage\",\n  \"Curiosity\",\n  \"Dedication\",\n  \"Determination\",\n  \"Ego\",\n  \"Elegance\",\n  \"Enthusiasm\",\n  \"Envy\",\n  \"Evil\",\n  \"Fear\",\n  \"Generosity\",\n  \"Goodness\",\n  \"Graciousness\",\n  \"Hatred\",\n  \"Honesty\",\n  \"Honor\",\n  \"Hope\",\n  \"Humility\",\n  \"Humor\",\n  \"Insanity\",\n  \"Integrity\",\n  \"Intelligence\",\n  \"Jealousy\",\n  \"Kindness\",\n  \"Loyalty\",\n  \"Maturity\",\n  \"Patience\",\n  \"Perseverance\",\n  \"Sanity\",\n  \"Self-control\",\n  \"Sensitivity\",\n  \"Sophistication\",\n  \"Stupidity\",\n  \"Sympathy\",\n  \"Talent\",\n  \"Tolerance\",\n  \"Trust\",\n  \"Warmth\",\n  \"Weakness\",\n  \"Wisdom\",\n  \"Wit\",\n  \"Adoration\",\n  \"Amazement\",\n  \"Anger\",\n  \"Anxiety\",\n  \"Apprehension\",\n  \"Clarity\",\n  \"Delight\",\n  \"Despair\",\n  \"Disappointment\",\n  \"Disbelief\",\n  \"Excitement\",\n  \"Fascination\",\n  \"Friendship\",\n  \"Grief\",\n  \"Happiness\",\n  \"Hate\",\n  \"Helpfulness\",\n  \"Helplessness\",\n  \"Infatuation\",\n  \"Joy\",\n  \"Love\",\n  \"Misery\",\n  \"Pain\",\n  \"Pleasure\",\n  \"Power\",\n  \"Pride\",\n  \"Relaxation\",\n  \"Relief\",\n  \"Romance\",\n  \"Sadness\",\n  \"Satisfaction\",\n  \"Silliness\",\n  \"Sorrow\",\n  \"Strength\",\n  \"Surprise\",\n  \"Tiredness\",\n  \"Uncertainty\",\n  \"Wariness\",\n  \"Weariness\",\n  \"Worry\",\n  \"Ability\",\n  \"Adventure\",\n  \"Artistry\",\n  \"Awe\",\n  \"Belief\",\n  \"Chaos\",\n  \"Comfort\",\n  \"Communication\",\n  \"Consideration\",\n  \"Crime\",\n  \"Culture\",\n  \"Customer service\",\n  \"Death\",\n  \"Deceit\",\n  \"Defeat\",\n  \"Democracy\",\n  \"Dexterity\",\n  \"Dictatorship\",\n  \"Disquiet\",\n  \"Disturbance\",\n  \"Dreams\",\n  \"Energy\",\n  \"Enhancement\",\n  \"Failure\",\n  \"Faith\",\n  \"Faithfulness\",\n  \"Faithlessness\",\n  \"Favoritism\",\n  \"Forgiveness\",\n  \"Fragility\",\n  \"Frailty\",\n  \"Freedom\",\n  \"Gossip\",\n  \"Grace\",\n  \"Hearsay\",\n  \"Homelessness\",\n  \"Hurt\",\n  \"Idea\",\n  \"Idiosyncrasy\",\n  \"Imagination\",\n  \"Impression\",\n  \"Improvement\",\n  \"Inflation\",\n  \"Information\",\n  \"Justice\",\n  \"Knowledge\",\n  \"Laughter\",\n  \"Law\",\n  \"Liberty\",\n  \"Life\",\n  \"Loss\",\n  \"Luck\",\n  \"Luxury\",\n  \"Memory\",\n  \"Mercy\",\n  \"Motivation\",\n  \"Movement\",\n  \"Need\",\n  \"Omen\",\n  \"Opinion\",\n  \"Opportunism\",\n  \"Opportunity\",\n  \"Parenthood\",\n  \"Patriotism\",\n  \"Peace\",\n  \"Peculiarity\",\n  \"Poverty\",\n  \"Principle\",\n  \"Reality\",\n  \"Redemption\",\n  \"Refreshment\",\n  \"Riches\",\n  \"Rumor\",\n  \"Service\",\n  \"Shock\",\n  \"Skill\",\n  \"Slavery\",\n  \"Sleep\",\n  \"Sparkle\",\n  \"Speculation\",\n  \"Speed\",\n  \"Strictness\",\n  \"Submission\",\n  \"Success\",\n  \"Thought\",\n  \"Thrill\",\n  \"Truth\",\n  \"Unemployment\",\n  \"Unreality\",\n  \"Victory\",\n  \"Wealth\"\n];\n\n// https://7esl.com/abstract-nouns/\n// copy(Object.values(jQuery(\"li strong\").map((x, y) => jQuery(y).text())).slice(0, 162))\nconst abstractNouns2 = [\n  \"Ability\",\n  \"Adoration\",\n  \"Advantage\",\n  \"Adventure\",\n  \"Amazement\",\n  \"Anger\",\n  \"Annoyance\",\n  \"Anxiety\",\n  \"Appetite\",\n  \"Apprehension\",\n  \"Artisty\",\n  \"Awareness\",\n  \"Awe\",\n  \"Beauty\",\n  \"Belief\",\n  \"Bravery\",\n  \"Brilliance\",\n  \"Brutality\",\n  \"Calm\",\n  \"Care\",\n  \"Chaos\",\n  \"Charity\",\n  \"Childhood\",\n  \"Clarity\",\n  \"Cleverness\",\n  \"Coldness\",\n  \"Comfort\",\n  \"Communication\",\n  \"Compassion\",\n  \"Confidence\",\n  \"Confusion\",\n  \"Contentment\",\n  \"Courage\",\n  \"Crime\",\n  \"Curiosity\",\n  \"Customer service\",\n  \"Death\",\n  \"Deceit\",\n  \"Dedication\",\n  \"Defeat\",\n  \"Delay\",\n  \"Delight\",\n  \"Despair\",\n  \"Determination\",\n  \"Dexterity\",\n  \"Dictatorship\",\n  \"Disappointment\",\n  \"Disbelief\",\n  \"Dishonesty\",\n  \"Disquiet\",\n  \"Disregard\",\n  \"Disturbance\",\n  \"Divorce\",\n  \"Dream\",\n  \"Education\",\n  \"Ego\",\n  \"Elegance\",\n  \"Envy\",\n  \"Evil\",\n  \"Failure\",\n  \"Faith\",\n  \"Fascination\",\n  \"Fear\",\n  \"Fiction\",\n  \"Fragility\",\n  \"Freedom\",\n  \"Friendship\",\n  \"Gain\",\n  \"Generation\",\n  \"Generosity\",\n  \"Goal\",\n  \"Goodness\",\n  \"Gossip\",\n  \"Growth\",\n  \"Happiness\",\n  \"Hate\",\n  \"Hatred\",\n  \"Hope\",\n  \"Horror\",\n  \"Hurt\",\n  \"Idea\",\n  \"Infancy\",\n  \"Infatuation\",\n  \"Inflation\",\n  \"Insanity\",\n  \"Intelligence\",\n  \"Irritation\",\n  \"Joy\",\n  \"Justice\",\n  \"Kindness\",\n  \"Laughter\",\n  \"Law\",\n  \"Liberty\",\n  \"Lie\",\n  \"Life\",\n  \"Loneliness\",\n  \"Loss\",\n  \"Love\",\n  \"Luck\",\n  \"Luxury\",\n  \"Maturity\",\n  \"Mercy\",\n  \"Movement\",\n  \"Music\",\n  \"Nap\",\n  \"Need\",\n  \"Opinion\",\n  \"Opportunity\",\n  \"Pain\",\n  \"Patience\",\n  \"Peace\",\n  \"Peculiarity\",\n  \"Perseverance\",\n  \"Pleasure\",\n  \"Poverty\",\n  \"Power\",\n  \"Pride\",\n  \"Principle\",\n  \"Reality\",\n  \"Relaxation\",\n  \"Relief\",\n  \"Religion\",\n  \"Restoration\",\n  \"Riches\",\n  \"Right\",\n  \"Rumour\",\n  \"Sacrifice\",\n  \"Sanity\",\n  \"Satisfaction\",\n  \"Self-control\",\n  \"Sensitivity\",\n  \"Service\",\n  \"Shock\",\n  \"Silliness\",\n  \"Skill\",\n  \"Sleep\",\n  \"Sorrow\",\n  \"Speed\",\n  \"Strenght\",\n  \"Strictness\",\n  \"Success\",\n  \"Surprise\",\n  \"Talent\",\n  \"Thrill\",\n  \"Timing\",\n  \"Tiredness\",\n  \"Tolerance\",\n  \"Trend\",\n  \"Trust\",\n  \"Uncertainty\",\n  \"Unemployment\",\n  \"Union\",\n  \"Unreality\",\n  \"Victory\",\n  \"Wariness\",\n  \"Warmth\",\n  \"Weakness\",\n  \"Wealth\",\n  \"Weariness\",\n  \"Wisdom\",\n  \"Wit\",\n  \"Worry\"\n];\n\n// get unique abstract nouns\nconst abstractNouns = [...new Set(abstractNouns1.concat(abstractNouns2))];\n\nconst words = [...new Set(abstractNouns.concat(CanIGetA.words))];\n\nexport default {\n  abstractNouns,\n  words\n};\n","const props = [\n  \"Soccer Ball\",\n  \"Basketball\",\n  \"Yoyo\",\n  \"Tea\",\n  \"Beer\"\n];\n\nconst secretWants = [\n  \"Validation\",\n  \"A Hug\",\n  \"Power\",\n  \"Efficiency\",\n  \"To Be Left Alone\",\n  \"A Surprise\",\n  \"To Be Feared\",\n  \"To Be The One\",\n  \"Romance\",\n  \"Legacy\",\n  \"The Newest Thing\",\n  \"A Gift\",\n  \"Acts Of Service\",\n  \"Make A Deal\",\n  \"To Have Someone Else Do Your Job\",\n  \"Be Taught How To Read\",\n  \"Be Seen As Smart\",\n  \"Your Soul\",\n  \"To Be Serenaded\",\n  \"Be Seen As Funny\",\n  \"Apology\",\n  \"Forgiveness\",\n  \"A Sandwich\",\n  \"To Hint At Secrets But Not Reveal Them\",\n  \"To Be Seen As Cool\",\n  \"To Be Like Partner\",\n  \"To Be Admired\",\n  \"To Learn\",\n  \"Adventure\",\n  \"Safety\",\n  \"Fame\",\n  \"The Right Answer,\"\n];\n\nconst animals = [\n  \"Meerkat\",\n  \"Peacock\",\n  \"Owl\",\n  \"Lion\",\n  \"Dog\",\n  \"Cat\",\n  \"Parrot\",\n  \"Snake\",\n  \"Mouse\",\n  \"Raccoon\",\n  \"Sloth\",\n  \"Lizard\",\n  \"Bear\",\n  \"Rabbit\",\n  \"Chicken\",\n  \"Crab\",\n  \"Snail\",\n  \"Praying Mantis\",\n  \"Frog\",\n];\n\nexport default {\n  props,\n  secretWants,\n  animals\n};\n","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Archetypes from './constants/Archetypes';\nimport Adjectives from './constants/Adjectives';\nimport CanIGetA from './constants/CanIGetA';\nimport Emotions from './constants/Emotions';\nimport Locations from \"./constants/Locations\"\nimport Names from \"./constants/Names\"\nimport Relationships from \"./constants/Relationships\"\nimport Words from \"./constants/Words\"\nimport CustomChoices from './constants/CustomChoices';\n\n\nfunction randomItem(items) {\n  return items[Math.floor(Math.random()*items.length)];\n}\n\n// function OldApp() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nconst generators = {\n  \"Word\": Words.words,\n  \"Emotion\": Emotions.combined,\n  \"Adjective\": Adjectives.adjectives,\n  \"Location\": Locations.locations,\n  \"Relationship\": Relationships.relationships,\n  \"First Name\": Names.firstNames,\n  \"Last Name\": Names.lastNames,\n  \"Prop / Possession\": CustomChoices.props,\n  \"Secret Want\": CustomChoices.secretWants,\n  \"Stock Character\": Archetypes.wikiStockCharacters,\n  \"Jung Archetype\": Archetypes.jungArchetypes,\n}\n\nclass GeneratorDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: randomItem(props.choices),\n    };\n  }\n\n  refresh() {\n    this.setState({value: randomItem(this.props.choices)})\n  }\n\n  render() {\n    return (\n      <div\n        className=\"generator-display\"\n        onClick={() => this.refresh()}\n      >\n        <div className=\"generator-name\">{this.props.name}:</div>\n\t<div className=\"generator-value\">{this.state.value}</div>\n      </div>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n\t{Object.entries(generators).map(([name, choices]) => {\n\t  return <GeneratorDisplay name={name} key={name} choices={choices} />\n\t})}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}